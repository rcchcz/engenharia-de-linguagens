Terminals unused in grammar

    CONTINUE


State 0 conflicts: 6 shift/reduce
State 14 conflicts: 6 shift/reduce
State 19 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 250 conflicts: 1 shift/reduce
State 252 conflicts: 1 shift/reduce
State 297 conflicts: 1 shift/reduce
State 299 conflicts: 1 shift/reduce
State 330 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: decs_var subprograms principal subprograms
    2     | decs_var principal subprograms
    3     | decs_var subprograms principal
    4     | decs_var principal

    5 decs_var: ε
    6         | dec_var decs_var
    7         | assigns

    8 dec_var: type ids SEMI
    9        | type ID ASSIGN p_values SEMI
   10        | type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   11        | type ID dims SEMI
   12        | type_modifiers type ids SEMI
   13        | type_modifiers type ID ASSIGN p_values SEMI
   14        | type_modifiers type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   15        | type_modifiers type ID dims SEMI
   16        | type MULT ID ASSIGN p_values SEMI
   17        | type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   18        | type MULT ID dims SEMI
   19        | type_modifiers type MULT ID ASSIGN p_values SEMI
   20        | type_modifiers type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers type MULT ID dims SEMI
   22        | type_modifier STRUCT ID BLOCK_BEGIN decs_var BLOCK_END SEMI
   23        | STRUCT ID BLOCK_BEGIN decs_var BLOCK_END SEMI
   24        | type_modifier STRUCT ID BLOCK_BEGIN BLOCK_END SEMI
   25        | STRUCT ID BLOCK_BEGIN BLOCK_END SEMI
   26        | STRUCT ID ID SEMI
   27        | type_modifier STRUCT ID ID SEMI

   28 type_modifiers: type_modifier
   29               | type_modifier type_modifier

   30 type_modifier: CONST
   31              | STATIC
   32              | ENUM
   33              | STRUCT

   34 type: INT
   35     | DOUBLE
   36     | FLOAT
   37     | CHAR
   38     | STRING
   39     | BOOLEAN

   40 ids: atomo
   41    | ids COMMA atomo
   42    | atomo COMMA p_values

   43 atomo: ID
   44      | ID dims
   45      | AMPERSAND ID
   46      | MULT ID
   47      | ID DOT ID

   48 dims: OPEN_BRACK CLOSE_BRACK
   49     | OPEN_BRACK CLOSE_BRACK dims
   50     | OPEN_BRACK value CLOSE_BRACK
   51     | OPEN_BRACK value CLOSE_BRACK dims
   52     | OPEN_BRACK expr CLOSE_BRACK
   53     | OPEN_BRACK expr CLOSE_BRACK dims
   54     | OPEN_BRACK ID CLOSE_BRACK
   55     | OPEN_BRACK ID CLOSE_BRACK dims

   56 p_values: expr
   57         | expr COMMA p_values

   58 expr: expr PLUS term
   59     | expr MINUS term
   60     | expr ADD_ASSIGN term
   61     | expr SUB_ASSIGN term
   62     | term

   63 term: term MULT factor
   64     | term DIV factor
   65     | term MODULE factor
   66     | factor

   67 factor: OPEN_PAREN expr CLOSE_PAREN
   68       | atomo
   69       | ID INCREMENT
   70       | ID DECREMENT
   71       | function_call
   72       | value

   73 value: INT_NUMBER
   74      | FLOAT_NUMBER
   75      | STRING_VALUE
   76      | NULL_VALUE

   77 assigns: assign_def
   78        | assign_mat
   79        | assign_def assigns

   80 assign_def: ID ASSIGN expr SEMI

   81 assign_mat: ID dims ASSIGN expr SEMI
   82           | ID dims ASSIGN ID dims SEMI

   83 subprograms: subprogram
   84            | subprogram subprograms

   85 subprogram: proc
   86           | function

   87 proc: VOID ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
   88     | VOID ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

   89 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END
   90         | type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

   91 params: param
   92       | param COMMA params

   93 param: type dims ID
   94      | type ID dims
   95      | type ID

   96 stmts: stmt
   97      | stmt stmts

   98 stmt: dec_var
   99     | assigns
  100     | function_call
  101     | conditional_stmt
  102     | iteration_stmt
  103     | scan_stmt
  104     | print_stmt

  105 scan_stmt: SCAN OPEN_PAREN atomo CLOSE_PAREN SEMI

  106 print_stmt: PRINT OPEN_PAREN print_content CLOSE_PAREN SEMI
  107           | PRINT OPEN_PAREN CLOSE_PAREN SEMI

  108 print_content: expr
  109              | print_content PLUS expr
  110              | STRING_VALUE PLUS print_content

  111 conditional_stmt: if_stmt
  112                 | switch_stmt

  113 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  114        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  115        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  116        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt

  117 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  118             | else_if_stmt else_if_stmt

  119 logic_expr: logic_expr logic_op c_term
  120           | c_term

  121 c_term: ID
  122       | ID dims
  123       | TRUE
  124       | FALSE
  125       | comp

  126 comp: expr comp_op expr

  127 comp_op: EQ
  128        | NEQ
  129        | GE
  130        | LE
  131        | GT
  132        | LT

  133 logic_op: AND
  134         | OR
  135         | NOT

  136 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

  137 switch_cases: ε
  138             | CASE value COLON stmts BREAK switch_cases

  139 iteration_stmt: while_stmt
  140               | for_stmt
  141               | dowhile_stmt

  142 while_stmt: WHILE OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

  143 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

  144 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI

  145 function_call: ID OPEN_PAREN args CLOSE_PAREN SEMI
  146              | ID OPEN_PAREN CLOSE_PAREN SEMI

  147 args: arg

  148 arg: ids

  149 principal: MAIN OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  150          | MAIN OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sValue> (258) 9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 43 44 45 46 47 54 55 69 70 80 81 82 87 88 89 90 93 94 95 121 122 136 145 146
    INT_NUMBER <sValue> (259) 73
    FLOAT_NUMBER <sValue> (260) 74
    STRING_VALUE <sValue> (261) 75 110
    INT (262) 34
    DOUBLE (263) 35
    FLOAT (264) 36
    CHAR (265) 37
    STRING (266) 38
    BOOLEAN (267) 39
    NULL_VALUE (268) 76
    VOID (269) 87 88
    STRUCT (270) 22 23 24 25 26 27 33
    ENUM (271) 32
    TRUE (272) 123
    FALSE (273) 124
    WHILE (274) 142 144
    DO (275) 144
    SWITCH (276) 136
    CASE (277) 138
    DEFAULT (278) 136
    IF (279) 113 114 115 116
    ELSE (280) 114 115
    ELSE_IF (281) 117
    FOR (282) 143
    CONTINUE (283)
    BREAK (284) 138
    CONST (285) 30
    STATIC (286) 31
    RETURN (287) 89 90
    MAIN (288) 149 150
    SCAN (289) 105
    PRINT (290) 106 107
    OPEN_PAREN (291) 67 87 88 89 90 105 106 107 113 114 115 116 117 136 142 143 144 145 146 149 150
    CLOSE_PAREN (292) 67 87 88 89 90 105 106 107 113 114 115 116 117 136 142 143 144 145 146 149 150
    OPEN_BRACK (293) 48 49 50 51 52 53 54 55
    CLOSE_BRACK (294) 48 49 50 51 52 53 54 55
    BLOCK_BEGIN (295) 10 14 17 20 22 23 24 25 87 88 89 90 113 114 115 116 117 136 142 143 144 149 150
    BLOCK_END (296) 10 14 17 20 22 23 24 25 87 88 89 90 113 114 115 116 117 136 142 143 144 149 150
    SEMI (297) 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 80 81 82 89 90 105 106 107 143 144 145 146
    COLON (298) 136 138
    DOT (299) 47
    COMMA (300) 41 42 57 92
    AMPERSAND (301) 45
    PLUS (302) 58 109 110
    MINUS (303) 59
    DIV (304) 64
    MULT (305) 16 17 18 19 20 21 46 63
    INCREMENT (306) 69
    DECREMENT (307) 70
    MODULE (308) 65
    ASSIGN (309) 9 10 13 14 16 17 19 20 80 81 82
    ADD_ASSIGN (310) 60
    SUB_ASSIGN (311) 61
    EQ (312) 127
    NEQ (313) 128
    LT (314) 132
    GT (315) 131
    LE (316) 130
    GE (317) 129
    AND (318) 133
    OR (319) 134
    NOT (320) 135


Nonterminals, with rules where they appear

    $accept (66)
        on left: 0
    prog (67)
        on left: 1 2 3 4
        on right: 0
    decs_var <rec> (68)
        on left: 5 6 7
        on right: 1 2 3 4 6 22 23
    dec_var <rec> (69)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
        on right: 6 98 143
    type_modifiers <rec> (70)
        on left: 28 29
        on right: 12 13 14 15 19 20 21
    type_modifier <rec> (71)
        on left: 30 31 32 33
        on right: 22 24 27 28 29
    type <rec> (72)
        on left: 34 35 36 37 38 39
        on right: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 89 90 93 94 95
    ids <rec> (73)
        on left: 40 41 42
        on right: 8 12 41 148
    atomo <rec> (74)
        on left: 43 44 45 46 47
        on right: 40 41 42 68 105
    dims <rec> (75)
        on left: 48 49 50 51 52 53 54 55
        on right: 10 11 14 15 17 18 20 21 44 49 51 53 55 81 82 93 94 122
    p_values <rec> (76)
        on left: 56 57
        on right: 9 10 13 14 16 17 19 20 42 57
    expr <rec> (77)
        on left: 58 59 60 61 62
        on right: 52 53 56 57 58 59 60 61 67 80 81 108 109 126 143
    term <rec> (78)
        on left: 63 64 65 66
        on right: 58 59 60 61 62 63 64 65
    factor <rec> (79)
        on left: 67 68 69 70 71 72
        on right: 63 64 65 66 89 90
    value <rec> (80)
        on left: 73 74 75 76
        on right: 50 51 72 138
    assigns <rec> (81)
        on left: 77 78 79
        on right: 7 79 99
    assign_def <rec> (82)
        on left: 80
        on right: 77 79
    assign_mat <rec> (83)
        on left: 81 82
        on right: 78
    subprograms <rec> (84)
        on left: 83 84
        on right: 1 2 3 84
    subprogram <rec> (85)
        on left: 85 86
        on right: 83 84
    proc <rec> (86)
        on left: 87 88
        on right: 85
    function <rec> (87)
        on left: 89 90
        on right: 86
    params <rec> (88)
        on left: 91 92
        on right: 87 89 92 149
    param <rec> (89)
        on left: 93 94 95
        on right: 91 92
    stmts <rec> (90)
        on left: 96 97
        on right: 87 88 89 90 97 113 114 115 116 117 136 138 142 143 144 149 150
    stmt <rec> (91)
        on left: 98 99 100 101 102 103 104
        on right: 96 97
    scan_stmt <rec> (92)
        on left: 105
        on right: 103
    print_stmt <rec> (93)
        on left: 106 107
        on right: 104
    print_content <rec> (94)
        on left: 108 109 110
        on right: 106 109 110
    conditional_stmt <rec> (95)
        on left: 111 112
        on right: 101
    if_stmt <rec> (96)
        on left: 113 114 115 116
        on right: 111
    else_if_stmt <rec> (97)
        on left: 117 118
        on right: 115 116 118
    logic_expr <rec> (98)
        on left: 119 120
        on right: 113 114 115 116 117 119 142 143 144
    c_term <rec> (99)
        on left: 121 122 123 124 125
        on right: 119 120
    comp <rec> (100)
        on left: 126
        on right: 125
    comp_op <rec> (101)
        on left: 127 128 129 130 131 132
        on right: 126
    logic_op <rec> (102)
        on left: 133 134 135
        on right: 119
    switch_stmt <rec> (103)
        on left: 136
        on right: 112
    switch_cases <rec> (104)
        on left: 137 138
        on right: 136 138
    iteration_stmt <rec> (105)
        on left: 139 140 141
        on right: 102
    while_stmt <rec> (106)
        on left: 142
        on right: 139
    for_stmt <rec> (107)
        on left: 143
        on right: 140
    dowhile_stmt <rec> (108)
        on left: 144
        on right: 141
    function_call <rec> (109)
        on left: 145 146
        on right: 71 100
    args <rec> (110)
        on left: 147
        on right: 145
    arg <rec> (111)
        on left: 148
        on right: 147
    principal <rec> (112)
        on left: 149 150
        on right: 1 2 3 4


State 0

    0 $accept: • prog $end

    ID       shift, and go to state 1
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11

    INT       [reduce using rule 5 (decs_var)]
    DOUBLE    [reduce using rule 5 (decs_var)]
    FLOAT     [reduce using rule 5 (decs_var)]
    CHAR      [reduce using rule 5 (decs_var)]
    STRING    [reduce using rule 5 (decs_var)]
    BOOLEAN   [reduce using rule 5 (decs_var)]
    $default  reduce using rule 5 (decs_var)

    prog            go to state 12
    decs_var        go to state 13
    dec_var         go to state 14
    type_modifiers  go to state 15
    type_modifier   go to state 16
    type            go to state 17
    assigns         go to state 18
    assign_def      go to state 19
    assign_mat      go to state 20


State 1

   80 assign_def: ID • ASSIGN expr SEMI
   81 assign_mat: ID • dims ASSIGN expr SEMI
   82           | ID • dims ASSIGN ID dims SEMI

    OPEN_BRACK  shift, and go to state 21
    ASSIGN      shift, and go to state 22

    dims  go to state 23


State 2

   34 type: INT •

    $default  reduce using rule 34 (type)


State 3

   35 type: DOUBLE •

    $default  reduce using rule 35 (type)


State 4

   36 type: FLOAT •

    $default  reduce using rule 36 (type)


State 5

   37 type: CHAR •

    $default  reduce using rule 37 (type)


State 6

   38 type: STRING •

    $default  reduce using rule 38 (type)


State 7

   39 type: BOOLEAN •

    $default  reduce using rule 39 (type)


State 8

   23 dec_var: STRUCT • ID BLOCK_BEGIN decs_var BLOCK_END SEMI
   25        | STRUCT • ID BLOCK_BEGIN BLOCK_END SEMI
   26        | STRUCT • ID ID SEMI
   33 type_modifier: STRUCT •

    ID  shift, and go to state 24

    $default  reduce using rule 33 (type_modifier)


State 9

   32 type_modifier: ENUM •

    $default  reduce using rule 32 (type_modifier)


State 10

   30 type_modifier: CONST •

    $default  reduce using rule 30 (type_modifier)


State 11

   31 type_modifier: STATIC •

    $default  reduce using rule 31 (type_modifier)


State 12

    0 $accept: prog • $end

    $end  shift, and go to state 25


State 13

    1 prog: decs_var • subprograms principal subprograms
    2     | decs_var • principal subprograms
    3     | decs_var • subprograms principal
    4     | decs_var • principal

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 26
    MAIN     shift, and go to state 27

    type         go to state 28
    subprograms  go to state 29
    subprogram   go to state 30
    proc         go to state 31
    function     go to state 32
    principal    go to state 33


State 14

    6 decs_var: dec_var • decs_var

    ID       shift, and go to state 1
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11

    INT       [reduce using rule 5 (decs_var)]
    DOUBLE    [reduce using rule 5 (decs_var)]
    FLOAT     [reduce using rule 5 (decs_var)]
    CHAR      [reduce using rule 5 (decs_var)]
    STRING    [reduce using rule 5 (decs_var)]
    BOOLEAN   [reduce using rule 5 (decs_var)]
    $default  reduce using rule 5 (decs_var)

    decs_var        go to state 34
    dec_var         go to state 14
    type_modifiers  go to state 15
    type_modifier   go to state 16
    type            go to state 17
    assigns         go to state 18
    assign_def      go to state 19
    assign_mat      go to state 20


State 15

   12 dec_var: type_modifiers • type ids SEMI
   13        | type_modifiers • type ID ASSIGN p_values SEMI
   14        | type_modifiers • type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   15        | type_modifiers • type ID dims SEMI
   19        | type_modifiers • type MULT ID ASSIGN p_values SEMI
   20        | type_modifiers • type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers • type MULT ID dims SEMI

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    type  go to state 35


State 16

   22 dec_var: type_modifier • STRUCT ID BLOCK_BEGIN decs_var BLOCK_END SEMI
   24        | type_modifier • STRUCT ID BLOCK_BEGIN BLOCK_END SEMI
   27        | type_modifier • STRUCT ID ID SEMI
   28 type_modifiers: type_modifier •
   29               | type_modifier • type_modifier

    STRUCT  shift, and go to state 36
    ENUM    shift, and go to state 9
    CONST   shift, and go to state 10
    STATIC  shift, and go to state 11

    $default  reduce using rule 28 (type_modifiers)

    type_modifier  go to state 37


State 17

    8 dec_var: type • ids SEMI
    9        | type • ID ASSIGN p_values SEMI
   10        | type • ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   11        | type • ID dims SEMI
   16        | type • MULT ID ASSIGN p_values SEMI
   17        | type • MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   18        | type • MULT ID dims SEMI

    ID         shift, and go to state 38
    AMPERSAND  shift, and go to state 39
    MULT       shift, and go to state 40

    ids    go to state 41
    atomo  go to state 42


State 18

    7 decs_var: assigns •

    $default  reduce using rule 7 (decs_var)


State 19

   77 assigns: assign_def •
   79        | assign_def • assigns

    ID  shift, and go to state 1

    ID        [reduce using rule 77 (assigns)]
    $default  reduce using rule 77 (assigns)

    assigns     go to state 43
    assign_def  go to state 19
    assign_mat  go to state 20


State 20

   78 assigns: assign_mat •

    $default  reduce using rule 78 (assigns)


State 21

   48 dims: OPEN_BRACK • CLOSE_BRACK
   49     | OPEN_BRACK • CLOSE_BRACK dims
   50     | OPEN_BRACK • value CLOSE_BRACK
   51     | OPEN_BRACK • value CLOSE_BRACK dims
   52     | OPEN_BRACK • expr CLOSE_BRACK
   53     | OPEN_BRACK • expr CLOSE_BRACK dims
   54     | OPEN_BRACK • ID CLOSE_BRACK
   55     | OPEN_BRACK • ID CLOSE_BRACK dims

    ID            shift, and go to state 44
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    CLOSE_BRACK   shift, and go to state 50
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 53
    term           go to state 54
    factor         go to state 55
    value          go to state 56
    function_call  go to state 57


State 22

   80 assign_def: ID ASSIGN • expr SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 59
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 23

   81 assign_mat: ID dims • ASSIGN expr SEMI
   82           | ID dims • ASSIGN ID dims SEMI

    ASSIGN  shift, and go to state 61


State 24

   23 dec_var: STRUCT ID • BLOCK_BEGIN decs_var BLOCK_END SEMI
   25        | STRUCT ID • BLOCK_BEGIN BLOCK_END SEMI
   26        | STRUCT ID • ID SEMI

    ID           shift, and go to state 62
    BLOCK_BEGIN  shift, and go to state 63


State 25

    0 $accept: prog $end •

    $default  accept


State 26

   87 proc: VOID • ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
   88     | VOID • ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    ID  shift, and go to state 64


State 27

  149 principal: MAIN • OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  150          | MAIN • OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 65


State 28

   89 function: type • ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END
   90         | type • ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    ID  shift, and go to state 66


State 29

    1 prog: decs_var subprograms • principal subprograms
    3     | decs_var subprograms • principal

    MAIN  shift, and go to state 27

    principal  go to state 67


State 30

   83 subprograms: subprogram •
   84            | subprogram • subprograms

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 26

    $default  reduce using rule 83 (subprograms)

    type         go to state 28
    subprograms  go to state 68
    subprogram   go to state 30
    proc         go to state 31
    function     go to state 32


State 31

   85 subprogram: proc •

    $default  reduce using rule 85 (subprogram)


State 32

   86 subprogram: function •

    $default  reduce using rule 86 (subprogram)


State 33

    2 prog: decs_var principal • subprograms
    4     | decs_var principal •

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 26

    $default  reduce using rule 4 (prog)

    type         go to state 28
    subprograms  go to state 69
    subprogram   go to state 30
    proc         go to state 31
    function     go to state 32


State 34

    6 decs_var: dec_var decs_var •

    $default  reduce using rule 6 (decs_var)


State 35

   12 dec_var: type_modifiers type • ids SEMI
   13        | type_modifiers type • ID ASSIGN p_values SEMI
   14        | type_modifiers type • ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   15        | type_modifiers type • ID dims SEMI
   19        | type_modifiers type • MULT ID ASSIGN p_values SEMI
   20        | type_modifiers type • MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers type • MULT ID dims SEMI

    ID         shift, and go to state 70
    AMPERSAND  shift, and go to state 39
    MULT       shift, and go to state 71

    ids    go to state 72
    atomo  go to state 42


State 36

   22 dec_var: type_modifier STRUCT • ID BLOCK_BEGIN decs_var BLOCK_END SEMI
   24        | type_modifier STRUCT • ID BLOCK_BEGIN BLOCK_END SEMI
   27        | type_modifier STRUCT • ID ID SEMI
   33 type_modifier: STRUCT •

    ID  shift, and go to state 73

    $default  reduce using rule 33 (type_modifier)


State 37

   29 type_modifiers: type_modifier type_modifier •

    $default  reduce using rule 29 (type_modifiers)


State 38

    9 dec_var: type ID • ASSIGN p_values SEMI
   10        | type ID • dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   11        | type ID • dims SEMI
   43 atomo: ID •
   44      | ID • dims
   47      | ID • DOT ID

    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 74
    ASSIGN      shift, and go to state 75

    $default  reduce using rule 43 (atomo)

    dims  go to state 76


State 39

   45 atomo: AMPERSAND • ID

    ID  shift, and go to state 77


State 40

   16 dec_var: type MULT • ID ASSIGN p_values SEMI
   17        | type MULT • ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   18        | type MULT • ID dims SEMI
   46 atomo: MULT • ID

    ID  shift, and go to state 78


State 41

    8 dec_var: type ids • SEMI
   41 ids: ids • COMMA atomo

    SEMI   shift, and go to state 79
    COMMA  shift, and go to state 80


State 42

   40 ids: atomo •
   42    | atomo • COMMA p_values

    COMMA  shift, and go to state 81

    COMMA     [reduce using rule 40 (ids)]
    $default  reduce using rule 40 (ids)


State 43

   79 assigns: assign_def assigns •

    $default  reduce using rule 79 (assigns)


State 44

   43 atomo: ID •
   44      | ID • dims
   47      | ID • DOT ID
   54 dims: OPEN_BRACK ID • CLOSE_BRACK
   55     | OPEN_BRACK ID • CLOSE_BRACK dims
   69 factor: ID • INCREMENT
   70       | ID • DECREMENT
  145 function_call: ID • OPEN_PAREN args CLOSE_PAREN SEMI
  146              | ID • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN   shift, and go to state 82
    OPEN_BRACK   shift, and go to state 21
    CLOSE_BRACK  shift, and go to state 83
    DOT          shift, and go to state 74
    INCREMENT    shift, and go to state 84
    DECREMENT    shift, and go to state 85

    CLOSE_BRACK  [reduce using rule 43 (atomo)]
    $default     reduce using rule 43 (atomo)

    dims  go to state 86


State 45

   73 value: INT_NUMBER •

    $default  reduce using rule 73 (value)


State 46

   74 value: FLOAT_NUMBER •

    $default  reduce using rule 74 (value)


State 47

   75 value: STRING_VALUE •

    $default  reduce using rule 75 (value)


State 48

   76 value: NULL_VALUE •

    $default  reduce using rule 76 (value)


State 49

   67 factor: OPEN_PAREN • expr CLOSE_PAREN

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 87
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 50

   48 dims: OPEN_BRACK CLOSE_BRACK •
   49     | OPEN_BRACK CLOSE_BRACK • dims

    OPEN_BRACK  shift, and go to state 21

    $default  reduce using rule 48 (dims)

    dims  go to state 88


State 51

   46 atomo: MULT • ID

    ID  shift, and go to state 89


State 52

   68 factor: atomo •

    $default  reduce using rule 68 (factor)


State 53

   52 dims: OPEN_BRACK expr • CLOSE_BRACK
   53     | OPEN_BRACK expr • CLOSE_BRACK dims
   58 expr: expr • PLUS term
   59     | expr • MINUS term
   60     | expr • ADD_ASSIGN term
   61     | expr • SUB_ASSIGN term

    CLOSE_BRACK  shift, and go to state 90
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    ADD_ASSIGN   shift, and go to state 93
    SUB_ASSIGN   shift, and go to state 94


State 54

   62 expr: term •
   63 term: term • MULT factor
   64     | term • DIV factor
   65     | term • MODULE factor

    DIV     shift, and go to state 95
    MULT    shift, and go to state 96
    MODULE  shift, and go to state 97

    $default  reduce using rule 62 (expr)


State 55

   66 term: factor •

    $default  reduce using rule 66 (term)


State 56

   50 dims: OPEN_BRACK value • CLOSE_BRACK
   51     | OPEN_BRACK value • CLOSE_BRACK dims
   72 factor: value •

    CLOSE_BRACK  shift, and go to state 98

    CLOSE_BRACK  [reduce using rule 72 (factor)]
    $default     reduce using rule 72 (factor)


State 57

   71 factor: function_call •

    $default  reduce using rule 71 (factor)


State 58

   43 atomo: ID •
   44      | ID • dims
   47      | ID • DOT ID
   69 factor: ID • INCREMENT
   70       | ID • DECREMENT
  145 function_call: ID • OPEN_PAREN args CLOSE_PAREN SEMI
  146              | ID • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 82
    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 74
    INCREMENT   shift, and go to state 84
    DECREMENT   shift, and go to state 85

    $default  reduce using rule 43 (atomo)

    dims  go to state 86


State 59

   58 expr: expr • PLUS term
   59     | expr • MINUS term
   60     | expr • ADD_ASSIGN term
   61     | expr • SUB_ASSIGN term
   80 assign_def: ID ASSIGN expr • SEMI

    SEMI        shift, and go to state 99
    PLUS        shift, and go to state 91
    MINUS       shift, and go to state 92
    ADD_ASSIGN  shift, and go to state 93
    SUB_ASSIGN  shift, and go to state 94


State 60

   72 factor: value •

    $default  reduce using rule 72 (factor)


State 61

   81 assign_mat: ID dims ASSIGN • expr SEMI
   82           | ID dims ASSIGN • ID dims SEMI

    ID            shift, and go to state 100
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 101
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 62

   26 dec_var: STRUCT ID ID • SEMI

    SEMI  shift, and go to state 102


State 63

   23 dec_var: STRUCT ID BLOCK_BEGIN • decs_var BLOCK_END SEMI
   25        | STRUCT ID BLOCK_BEGIN • BLOCK_END SEMI

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    DOUBLE     shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    CONST      shift, and go to state 10
    STATIC     shift, and go to state 11
    BLOCK_END  shift, and go to state 103

    BLOCK_END  [reduce using rule 5 (decs_var)]

    decs_var        go to state 104
    dec_var         go to state 14
    type_modifiers  go to state 15
    type_modifier   go to state 16
    type            go to state 17
    assigns         go to state 18
    assign_def      go to state 19
    assign_mat      go to state 20


State 64

   87 proc: VOID ID • OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
   88     | VOID ID • OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 105


State 65

  149 principal: MAIN OPEN_PAREN • params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  150          | MAIN OPEN_PAREN • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    INT          shift, and go to state 2
    DOUBLE       shift, and go to state 3
    FLOAT        shift, and go to state 4
    CHAR         shift, and go to state 5
    STRING       shift, and go to state 6
    BOOLEAN      shift, and go to state 7
    CLOSE_PAREN  shift, and go to state 106

    type    go to state 107
    params  go to state 108
    param   go to state 109


State 66

   89 function: type ID • OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END
   90         | type ID • OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    OPEN_PAREN  shift, and go to state 110


State 67

    1 prog: decs_var subprograms principal • subprograms
    3     | decs_var subprograms principal •

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 26

    $default  reduce using rule 3 (prog)

    type         go to state 28
    subprograms  go to state 111
    subprogram   go to state 30
    proc         go to state 31
    function     go to state 32


State 68

   84 subprograms: subprogram subprograms •

    $default  reduce using rule 84 (subprograms)


State 69

    2 prog: decs_var principal subprograms •

    $default  reduce using rule 2 (prog)


State 70

   13 dec_var: type_modifiers type ID • ASSIGN p_values SEMI
   14        | type_modifiers type ID • dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   15        | type_modifiers type ID • dims SEMI
   43 atomo: ID •
   44      | ID • dims
   47      | ID • DOT ID

    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 74
    ASSIGN      shift, and go to state 112

    $default  reduce using rule 43 (atomo)

    dims  go to state 113


State 71

   19 dec_var: type_modifiers type MULT • ID ASSIGN p_values SEMI
   20        | type_modifiers type MULT • ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers type MULT • ID dims SEMI
   46 atomo: MULT • ID

    ID  shift, and go to state 114


State 72

   12 dec_var: type_modifiers type ids • SEMI
   41 ids: ids • COMMA atomo

    SEMI   shift, and go to state 115
    COMMA  shift, and go to state 80


State 73

   22 dec_var: type_modifier STRUCT ID • BLOCK_BEGIN decs_var BLOCK_END SEMI
   24        | type_modifier STRUCT ID • BLOCK_BEGIN BLOCK_END SEMI
   27        | type_modifier STRUCT ID • ID SEMI

    ID           shift, and go to state 116
    BLOCK_BEGIN  shift, and go to state 117


State 74

   47 atomo: ID DOT • ID

    ID  shift, and go to state 118


State 75

    9 dec_var: type ID ASSIGN • p_values SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 119
    expr           go to state 120
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 76

   10 dec_var: type ID dims • ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   11        | type ID dims • SEMI
   44 atomo: ID dims •

    SEMI    shift, and go to state 121
    ASSIGN  shift, and go to state 122

    SEMI      [reduce using rule 44 (atomo)]
    $default  reduce using rule 44 (atomo)


State 77

   45 atomo: AMPERSAND ID •

    $default  reduce using rule 45 (atomo)


State 78

   16 dec_var: type MULT ID • ASSIGN p_values SEMI
   17        | type MULT ID • dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   18        | type MULT ID • dims SEMI
   46 atomo: MULT ID •

    OPEN_BRACK  shift, and go to state 21
    ASSIGN      shift, and go to state 123

    $default  reduce using rule 46 (atomo)

    dims  go to state 124


State 79

    8 dec_var: type ids SEMI •

    $default  reduce using rule 8 (dec_var)


State 80

   41 ids: ids COMMA • atomo

    ID         shift, and go to state 125
    AMPERSAND  shift, and go to state 39
    MULT       shift, and go to state 51

    atomo  go to state 126


State 81

   42 ids: atomo COMMA • p_values

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 127
    expr           go to state 120
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 82

  145 function_call: ID OPEN_PAREN • args CLOSE_PAREN SEMI
  146              | ID OPEN_PAREN • CLOSE_PAREN SEMI

    ID           shift, and go to state 125
    CLOSE_PAREN  shift, and go to state 128
    AMPERSAND    shift, and go to state 39
    MULT         shift, and go to state 51

    ids    go to state 129
    atomo  go to state 42
    args   go to state 130
    arg    go to state 131


State 83

   54 dims: OPEN_BRACK ID CLOSE_BRACK •
   55     | OPEN_BRACK ID CLOSE_BRACK • dims

    OPEN_BRACK  shift, and go to state 21

    $default  reduce using rule 54 (dims)

    dims  go to state 132


State 84

   69 factor: ID INCREMENT •

    $default  reduce using rule 69 (factor)


State 85

   70 factor: ID DECREMENT •

    $default  reduce using rule 70 (factor)


State 86

   44 atomo: ID dims •

    $default  reduce using rule 44 (atomo)


State 87

   58 expr: expr • PLUS term
   59     | expr • MINUS term
   60     | expr • ADD_ASSIGN term
   61     | expr • SUB_ASSIGN term
   67 factor: OPEN_PAREN expr • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 133
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    ADD_ASSIGN   shift, and go to state 93
    SUB_ASSIGN   shift, and go to state 94


State 88

   49 dims: OPEN_BRACK CLOSE_BRACK dims •

    $default  reduce using rule 49 (dims)


State 89

   46 atomo: MULT ID •

    $default  reduce using rule 46 (atomo)


State 90

   52 dims: OPEN_BRACK expr CLOSE_BRACK •
   53     | OPEN_BRACK expr CLOSE_BRACK • dims

    OPEN_BRACK  shift, and go to state 21

    $default  reduce using rule 52 (dims)

    dims  go to state 134


State 91

   58 expr: expr PLUS • term

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    term           go to state 135
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 92

   59 expr: expr MINUS • term

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    term           go to state 136
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 93

   60 expr: expr ADD_ASSIGN • term

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    term           go to state 137
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 94

   61 expr: expr SUB_ASSIGN • term

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    term           go to state 138
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 95

   64 term: term DIV • factor

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    factor         go to state 139
    value          go to state 60
    function_call  go to state 57


State 96

   63 term: term MULT • factor

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    factor         go to state 140
    value          go to state 60
    function_call  go to state 57


State 97

   65 term: term MODULE • factor

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    factor         go to state 141
    value          go to state 60
    function_call  go to state 57


State 98

   50 dims: OPEN_BRACK value CLOSE_BRACK •
   51     | OPEN_BRACK value CLOSE_BRACK • dims

    OPEN_BRACK  shift, and go to state 21

    $default  reduce using rule 50 (dims)

    dims  go to state 142


State 99

   80 assign_def: ID ASSIGN expr SEMI •

    $default  reduce using rule 80 (assign_def)


State 100

   43 atomo: ID •
   44      | ID • dims
   47      | ID • DOT ID
   69 factor: ID • INCREMENT
   70       | ID • DECREMENT
   82 assign_mat: ID dims ASSIGN ID • dims SEMI
  145 function_call: ID • OPEN_PAREN args CLOSE_PAREN SEMI
  146              | ID • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 82
    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 74
    INCREMENT   shift, and go to state 84
    DECREMENT   shift, and go to state 85

    $default  reduce using rule 43 (atomo)

    dims  go to state 143


State 101

   58 expr: expr • PLUS term
   59     | expr • MINUS term
   60     | expr • ADD_ASSIGN term
   61     | expr • SUB_ASSIGN term
   81 assign_mat: ID dims ASSIGN expr • SEMI

    SEMI        shift, and go to state 144
    PLUS        shift, and go to state 91
    MINUS       shift, and go to state 92
    ADD_ASSIGN  shift, and go to state 93
    SUB_ASSIGN  shift, and go to state 94


State 102

   26 dec_var: STRUCT ID ID SEMI •

    $default  reduce using rule 26 (dec_var)


State 103

   25 dec_var: STRUCT ID BLOCK_BEGIN BLOCK_END • SEMI

    SEMI  shift, and go to state 145


State 104

   23 dec_var: STRUCT ID BLOCK_BEGIN decs_var • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 146


State 105

   87 proc: VOID ID OPEN_PAREN • params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
   88     | VOID ID OPEN_PAREN • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    INT          shift, and go to state 2
    DOUBLE       shift, and go to state 3
    FLOAT        shift, and go to state 4
    CHAR         shift, and go to state 5
    STRING       shift, and go to state 6
    BOOLEAN      shift, and go to state 7
    CLOSE_PAREN  shift, and go to state 147

    type    go to state 107
    params  go to state 148
    param   go to state 109


State 106

  150 principal: MAIN OPEN_PAREN CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 149


State 107

   93 param: type • dims ID
   94      | type • ID dims
   95      | type • ID

    ID          shift, and go to state 150
    OPEN_BRACK  shift, and go to state 21

    dims  go to state 151


State 108

  149 principal: MAIN OPEN_PAREN params • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    CLOSE_PAREN  shift, and go to state 152


State 109

   91 params: param •
   92       | param • COMMA params

    COMMA  shift, and go to state 153

    $default  reduce using rule 91 (params)


State 110

   89 function: type ID OPEN_PAREN • params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END
   90         | type ID OPEN_PAREN • CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    INT          shift, and go to state 2
    DOUBLE       shift, and go to state 3
    FLOAT        shift, and go to state 4
    CHAR         shift, and go to state 5
    STRING       shift, and go to state 6
    BOOLEAN      shift, and go to state 7
    CLOSE_PAREN  shift, and go to state 154

    type    go to state 107
    params  go to state 155
    param   go to state 109


State 111

    1 prog: decs_var subprograms principal subprograms •

    $default  reduce using rule 1 (prog)


State 112

   13 dec_var: type_modifiers type ID ASSIGN • p_values SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 156
    expr           go to state 120
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 113

   14 dec_var: type_modifiers type ID dims • ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   15        | type_modifiers type ID dims • SEMI
   44 atomo: ID dims •

    SEMI    shift, and go to state 157
    ASSIGN  shift, and go to state 158

    SEMI      [reduce using rule 44 (atomo)]
    $default  reduce using rule 44 (atomo)


State 114

   19 dec_var: type_modifiers type MULT ID • ASSIGN p_values SEMI
   20        | type_modifiers type MULT ID • dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers type MULT ID • dims SEMI
   46 atomo: MULT ID •

    OPEN_BRACK  shift, and go to state 21
    ASSIGN      shift, and go to state 159

    $default  reduce using rule 46 (atomo)

    dims  go to state 160


State 115

   12 dec_var: type_modifiers type ids SEMI •

    $default  reduce using rule 12 (dec_var)


State 116

   27 dec_var: type_modifier STRUCT ID ID • SEMI

    SEMI  shift, and go to state 161


State 117

   22 dec_var: type_modifier STRUCT ID BLOCK_BEGIN • decs_var BLOCK_END SEMI
   24        | type_modifier STRUCT ID BLOCK_BEGIN • BLOCK_END SEMI

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    DOUBLE     shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    CONST      shift, and go to state 10
    STATIC     shift, and go to state 11
    BLOCK_END  shift, and go to state 162

    BLOCK_END  [reduce using rule 5 (decs_var)]

    decs_var        go to state 163
    dec_var         go to state 14
    type_modifiers  go to state 15
    type_modifier   go to state 16
    type            go to state 17
    assigns         go to state 18
    assign_def      go to state 19
    assign_mat      go to state 20


State 118

   47 atomo: ID DOT ID •

    $default  reduce using rule 47 (atomo)


State 119

    9 dec_var: type ID ASSIGN p_values • SEMI

    SEMI  shift, and go to state 164


State 120

   56 p_values: expr •
   57         | expr • COMMA p_values
   58 expr: expr • PLUS term
   59     | expr • MINUS term
   60     | expr • ADD_ASSIGN term
   61     | expr • SUB_ASSIGN term

    COMMA       shift, and go to state 165
    PLUS        shift, and go to state 91
    MINUS       shift, and go to state 92
    ADD_ASSIGN  shift, and go to state 93
    SUB_ASSIGN  shift, and go to state 94

    COMMA     [reduce using rule 56 (p_values)]
    $default  reduce using rule 56 (p_values)


State 121

   11 dec_var: type ID dims SEMI •

    $default  reduce using rule 11 (dec_var)


State 122

   10 dec_var: type ID dims ASSIGN • BLOCK_BEGIN p_values BLOCK_END SEMI

    BLOCK_BEGIN  shift, and go to state 166


State 123

   16 dec_var: type MULT ID ASSIGN • p_values SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 167
    expr           go to state 120
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 124

   17 dec_var: type MULT ID dims • ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   18        | type MULT ID dims • SEMI

    SEMI    shift, and go to state 168
    ASSIGN  shift, and go to state 169


State 125

   43 atomo: ID •
   44      | ID • dims
   47      | ID • DOT ID

    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 74

    $default  reduce using rule 43 (atomo)

    dims  go to state 86


State 126

   41 ids: ids COMMA atomo •

    $default  reduce using rule 41 (ids)


State 127

   42 ids: atomo COMMA p_values •

    $default  reduce using rule 42 (ids)


State 128

  146 function_call: ID OPEN_PAREN CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 170


State 129

   41 ids: ids • COMMA atomo
  148 arg: ids •

    COMMA  shift, and go to state 80

    $default  reduce using rule 148 (arg)


State 130

  145 function_call: ID OPEN_PAREN args • CLOSE_PAREN SEMI

    CLOSE_PAREN  shift, and go to state 171


State 131

  147 args: arg •

    $default  reduce using rule 147 (args)


State 132

   55 dims: OPEN_BRACK ID CLOSE_BRACK dims •

    $default  reduce using rule 55 (dims)


State 133

   67 factor: OPEN_PAREN expr CLOSE_PAREN •

    $default  reduce using rule 67 (factor)


State 134

   53 dims: OPEN_BRACK expr CLOSE_BRACK dims •

    $default  reduce using rule 53 (dims)


State 135

   58 expr: expr PLUS term •
   63 term: term • MULT factor
   64     | term • DIV factor
   65     | term • MODULE factor

    DIV     shift, and go to state 95
    MULT    shift, and go to state 96
    MODULE  shift, and go to state 97

    $default  reduce using rule 58 (expr)


State 136

   59 expr: expr MINUS term •
   63 term: term • MULT factor
   64     | term • DIV factor
   65     | term • MODULE factor

    DIV     shift, and go to state 95
    MULT    shift, and go to state 96
    MODULE  shift, and go to state 97

    $default  reduce using rule 59 (expr)


State 137

   60 expr: expr ADD_ASSIGN term •
   63 term: term • MULT factor
   64     | term • DIV factor
   65     | term • MODULE factor

    DIV     shift, and go to state 95
    MULT    shift, and go to state 96
    MODULE  shift, and go to state 97

    $default  reduce using rule 60 (expr)


State 138

   61 expr: expr SUB_ASSIGN term •
   63 term: term • MULT factor
   64     | term • DIV factor
   65     | term • MODULE factor

    DIV     shift, and go to state 95
    MULT    shift, and go to state 96
    MODULE  shift, and go to state 97

    $default  reduce using rule 61 (expr)


State 139

   64 term: term DIV factor •

    $default  reduce using rule 64 (term)


State 140

   63 term: term MULT factor •

    $default  reduce using rule 63 (term)


State 141

   65 term: term MODULE factor •

    $default  reduce using rule 65 (term)


State 142

   51 dims: OPEN_BRACK value CLOSE_BRACK dims •

    $default  reduce using rule 51 (dims)


State 143

   44 atomo: ID dims •
   82 assign_mat: ID dims ASSIGN ID dims • SEMI

    SEMI  shift, and go to state 172

    SEMI      [reduce using rule 44 (atomo)]
    $default  reduce using rule 44 (atomo)


State 144

   81 assign_mat: ID dims ASSIGN expr SEMI •

    $default  reduce using rule 81 (assign_mat)


State 145

   25 dec_var: STRUCT ID BLOCK_BEGIN BLOCK_END SEMI •

    $default  reduce using rule 25 (dec_var)


State 146

   23 dec_var: STRUCT ID BLOCK_BEGIN decs_var BLOCK_END • SEMI

    SEMI  shift, and go to state 173


State 147

   88 proc: VOID ID OPEN_PAREN CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 174


State 148

   87 proc: VOID ID OPEN_PAREN params • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    CLOSE_PAREN  shift, and go to state 175


State 149

  150 principal: MAIN OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 186
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 150

   94 param: type ID • dims
   95      | type ID •

    OPEN_BRACK  shift, and go to state 21

    $default  reduce using rule 95 (param)

    dims  go to state 198


State 151

   93 param: type dims • ID

    ID  shift, and go to state 199


State 152

  149 principal: MAIN OPEN_PAREN params CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 200


State 153

   92 params: param COMMA • params

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    type    go to state 107
    params  go to state 201
    param   go to state 109


State 154

   90 function: type ID OPEN_PAREN CLOSE_PAREN • BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    BLOCK_BEGIN  shift, and go to state 202


State 155

   89 function: type ID OPEN_PAREN params • CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    CLOSE_PAREN  shift, and go to state 203


State 156

   13 dec_var: type_modifiers type ID ASSIGN p_values • SEMI

    SEMI  shift, and go to state 204


State 157

   15 dec_var: type_modifiers type ID dims SEMI •

    $default  reduce using rule 15 (dec_var)


State 158

   14 dec_var: type_modifiers type ID dims ASSIGN • BLOCK_BEGIN p_values BLOCK_END SEMI

    BLOCK_BEGIN  shift, and go to state 205


State 159

   19 dec_var: type_modifiers type MULT ID ASSIGN • p_values SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 206
    expr           go to state 120
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 160

   20 dec_var: type_modifiers type MULT ID dims • ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers type MULT ID dims • SEMI

    SEMI    shift, and go to state 207
    ASSIGN  shift, and go to state 208


State 161

   27 dec_var: type_modifier STRUCT ID ID SEMI •

    $default  reduce using rule 27 (dec_var)


State 162

   24 dec_var: type_modifier STRUCT ID BLOCK_BEGIN BLOCK_END • SEMI

    SEMI  shift, and go to state 209


State 163

   22 dec_var: type_modifier STRUCT ID BLOCK_BEGIN decs_var • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 210


State 164

    9 dec_var: type ID ASSIGN p_values SEMI •

    $default  reduce using rule 9 (dec_var)


State 165

   57 p_values: expr COMMA • p_values

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 211
    expr           go to state 120
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 166

   10 dec_var: type ID dims ASSIGN BLOCK_BEGIN • p_values BLOCK_END SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 212
    expr           go to state 120
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 167

   16 dec_var: type MULT ID ASSIGN p_values • SEMI

    SEMI  shift, and go to state 213


State 168

   18 dec_var: type MULT ID dims SEMI •

    $default  reduce using rule 18 (dec_var)


State 169

   17 dec_var: type MULT ID dims ASSIGN • BLOCK_BEGIN p_values BLOCK_END SEMI

    BLOCK_BEGIN  shift, and go to state 214


State 170

  146 function_call: ID OPEN_PAREN CLOSE_PAREN SEMI •

    $default  reduce using rule 146 (function_call)


State 171

  145 function_call: ID OPEN_PAREN args CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 215


State 172

   82 assign_mat: ID dims ASSIGN ID dims SEMI •

    $default  reduce using rule 82 (assign_mat)


State 173

   23 dec_var: STRUCT ID BLOCK_BEGIN decs_var BLOCK_END SEMI •

    $default  reduce using rule 23 (dec_var)


State 174

   88 proc: VOID ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 216
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 175

   87 proc: VOID ID OPEN_PAREN params CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 217


State 176

   80 assign_def: ID • ASSIGN expr SEMI
   81 assign_mat: ID • dims ASSIGN expr SEMI
   82           | ID • dims ASSIGN ID dims SEMI
  145 function_call: ID • OPEN_PAREN args CLOSE_PAREN SEMI
  146              | ID • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 82
    OPEN_BRACK  shift, and go to state 21
    ASSIGN      shift, and go to state 22

    dims  go to state 23


State 177

  142 while_stmt: WHILE • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 218


State 178

  144 dowhile_stmt: DO • BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI

    BLOCK_BEGIN  shift, and go to state 219


State 179

  136 switch_stmt: SWITCH • COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

    COLON  shift, and go to state 220


State 180

  113 if_stmt: IF • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  114        | IF • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  115        | IF • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  116        | IF • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt

    OPEN_PAREN  shift, and go to state 221


State 181

  143 for_stmt: FOR • OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 222


State 182

  105 scan_stmt: SCAN • OPEN_PAREN atomo CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 223


State 183

  106 print_stmt: PRINT • OPEN_PAREN print_content CLOSE_PAREN SEMI
  107           | PRINT • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 224


State 184

   98 stmt: dec_var •

    $default  reduce using rule 98 (stmt)


State 185

   99 stmt: assigns •

    $default  reduce using rule 99 (stmt)


State 186

  150 principal: MAIN OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 225


State 187

   96 stmts: stmt •
   97      | stmt • stmts

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    $default  reduce using rule 96 (stmts)

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 226
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 188

  103 stmt: scan_stmt •

    $default  reduce using rule 103 (stmt)


State 189

  104 stmt: print_stmt •

    $default  reduce using rule 104 (stmt)


State 190

  101 stmt: conditional_stmt •

    $default  reduce using rule 101 (stmt)


State 191

  111 conditional_stmt: if_stmt •

    $default  reduce using rule 111 (conditional_stmt)


State 192

  112 conditional_stmt: switch_stmt •

    $default  reduce using rule 112 (conditional_stmt)


State 193

  102 stmt: iteration_stmt •

    $default  reduce using rule 102 (stmt)


State 194

  139 iteration_stmt: while_stmt •

    $default  reduce using rule 139 (iteration_stmt)


State 195

  140 iteration_stmt: for_stmt •

    $default  reduce using rule 140 (iteration_stmt)


State 196

  141 iteration_stmt: dowhile_stmt •

    $default  reduce using rule 141 (iteration_stmt)


State 197

  100 stmt: function_call •

    $default  reduce using rule 100 (stmt)


State 198

   94 param: type ID dims •

    $default  reduce using rule 94 (param)


State 199

   93 param: type dims ID •

    $default  reduce using rule 93 (param)


State 200

  149 principal: MAIN OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 227
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 201

   92 params: param COMMA params •

    $default  reduce using rule 92 (params)


State 202

   90 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN • stmts RETURN factor SEMI BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 228
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 203

   89 function: type ID OPEN_PAREN params CLOSE_PAREN • BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    BLOCK_BEGIN  shift, and go to state 229


State 204

   13 dec_var: type_modifiers type ID ASSIGN p_values SEMI •

    $default  reduce using rule 13 (dec_var)


State 205

   14 dec_var: type_modifiers type ID dims ASSIGN BLOCK_BEGIN • p_values BLOCK_END SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 230
    expr           go to state 120
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 206

   19 dec_var: type_modifiers type MULT ID ASSIGN p_values • SEMI

    SEMI  shift, and go to state 231


State 207

   21 dec_var: type_modifiers type MULT ID dims SEMI •

    $default  reduce using rule 21 (dec_var)


State 208

   20 dec_var: type_modifiers type MULT ID dims ASSIGN • BLOCK_BEGIN p_values BLOCK_END SEMI

    BLOCK_BEGIN  shift, and go to state 232


State 209

   24 dec_var: type_modifier STRUCT ID BLOCK_BEGIN BLOCK_END SEMI •

    $default  reduce using rule 24 (dec_var)


State 210

   22 dec_var: type_modifier STRUCT ID BLOCK_BEGIN decs_var BLOCK_END • SEMI

    SEMI  shift, and go to state 233


State 211

   57 p_values: expr COMMA p_values •

    $default  reduce using rule 57 (p_values)


State 212

   10 dec_var: type ID dims ASSIGN BLOCK_BEGIN p_values • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 234


State 213

   16 dec_var: type MULT ID ASSIGN p_values SEMI •

    $default  reduce using rule 16 (dec_var)


State 214

   17 dec_var: type MULT ID dims ASSIGN BLOCK_BEGIN • p_values BLOCK_END SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 235
    expr           go to state 120
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 215

  145 function_call: ID OPEN_PAREN args CLOSE_PAREN SEMI •

    $default  reduce using rule 145 (function_call)


State 216

   88 proc: VOID ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 236


State 217

   87 proc: VOID ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 237
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 218

  142 while_stmt: WHILE OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    ID            shift, and go to state 238
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 239
    FALSE         shift, and go to state 240
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 241
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    logic_expr     go to state 242
    c_term         go to state 243
    comp           go to state 244
    function_call  go to state 57


State 219

  144 dowhile_stmt: DO BLOCK_BEGIN • stmts BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 245
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 220

  136 switch_stmt: SWITCH COLON • OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 246


State 221

  113 if_stmt: IF OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  114        | IF OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  115        | IF OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  116        | IF OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt

    ID            shift, and go to state 238
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 239
    FALSE         shift, and go to state 240
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 241
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    logic_expr     go to state 247
    c_term         go to state 243
    comp           go to state 244
    function_call  go to state 57


State 222

  143 for_stmt: FOR OPEN_PAREN • dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11

    dec_var         go to state 248
    type_modifiers  go to state 15
    type_modifier   go to state 16
    type            go to state 17


State 223

  105 scan_stmt: SCAN OPEN_PAREN • atomo CLOSE_PAREN SEMI

    ID         shift, and go to state 125
    AMPERSAND  shift, and go to state 39
    MULT       shift, and go to state 51

    atomo  go to state 249


State 224

  106 print_stmt: PRINT OPEN_PAREN • print_content CLOSE_PAREN SEMI
  107           | PRINT OPEN_PAREN • CLOSE_PAREN SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 250
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    CLOSE_PAREN   shift, and go to state 251
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 252
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    print_content  go to state 253
    function_call  go to state 57


State 225

  150 principal: MAIN OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 150 (principal)


State 226

   97 stmts: stmt stmts •

    $default  reduce using rule 97 (stmts)


State 227

  149 principal: MAIN OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 254


State 228

   90 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts • RETURN factor SEMI BLOCK_END

    RETURN  shift, and go to state 255


State 229

   89 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN • stmts RETURN factor SEMI BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 256
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 230

   14 dec_var: type_modifiers type ID dims ASSIGN BLOCK_BEGIN p_values • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 257


State 231

   19 dec_var: type_modifiers type MULT ID ASSIGN p_values SEMI •

    $default  reduce using rule 19 (dec_var)


State 232

   20 dec_var: type_modifiers type MULT ID dims ASSIGN BLOCK_BEGIN • p_values BLOCK_END SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 258
    expr           go to state 120
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 233

   22 dec_var: type_modifier STRUCT ID BLOCK_BEGIN decs_var BLOCK_END SEMI •

    $default  reduce using rule 22 (dec_var)


State 234

   10 dec_var: type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END • SEMI

    SEMI  shift, and go to state 259


State 235

   17 dec_var: type MULT ID dims ASSIGN BLOCK_BEGIN p_values • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 260


State 236

   88 proc: VOID ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 88 (proc)


State 237

   87 proc: VOID ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 261


State 238

   43 atomo: ID •
   44      | ID • dims
   47      | ID • DOT ID
   69 factor: ID • INCREMENT
   70       | ID • DECREMENT
  121 c_term: ID •
  122       | ID • dims
  145 function_call: ID • OPEN_PAREN args CLOSE_PAREN SEMI
  146              | ID • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 82
    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 74
    INCREMENT   shift, and go to state 84
    DECREMENT   shift, and go to state 85

    CLOSE_PAREN  reduce using rule 121 (c_term)
    SEMI         reduce using rule 121 (c_term)
    AND          reduce using rule 121 (c_term)
    OR           reduce using rule 121 (c_term)
    NOT          reduce using rule 121 (c_term)
    $default     reduce using rule 43 (atomo)

    dims  go to state 262


State 239

  123 c_term: TRUE •

    $default  reduce using rule 123 (c_term)


State 240

  124 c_term: FALSE •

    $default  reduce using rule 124 (c_term)


State 241

   58 expr: expr • PLUS term
   59     | expr • MINUS term
   60     | expr • ADD_ASSIGN term
   61     | expr • SUB_ASSIGN term
  126 comp: expr • comp_op expr

    PLUS        shift, and go to state 91
    MINUS       shift, and go to state 92
    ADD_ASSIGN  shift, and go to state 93
    SUB_ASSIGN  shift, and go to state 94
    EQ          shift, and go to state 263
    NEQ         shift, and go to state 264
    LT          shift, and go to state 265
    GT          shift, and go to state 266
    LE          shift, and go to state 267
    GE          shift, and go to state 268

    comp_op  go to state 269


State 242

  119 logic_expr: logic_expr • logic_op c_term
  142 while_stmt: WHILE OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    CLOSE_PAREN  shift, and go to state 270
    AND          shift, and go to state 271
    OR           shift, and go to state 272
    NOT          shift, and go to state 273

    logic_op  go to state 274


State 243

  120 logic_expr: c_term •

    $default  reduce using rule 120 (logic_expr)


State 244

  125 c_term: comp •

    $default  reduce using rule 125 (c_term)


State 245

  144 dowhile_stmt: DO BLOCK_BEGIN stmts • BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI

    BLOCK_END  shift, and go to state 275


State 246

  136 switch_stmt: SWITCH COLON OPEN_PAREN • ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

    ID  shift, and go to state 276


State 247

  113 if_stmt: IF OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  114        | IF OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  115        | IF OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  116        | IF OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt
  119 logic_expr: logic_expr • logic_op c_term

    CLOSE_PAREN  shift, and go to state 277
    AND          shift, and go to state 271
    OR           shift, and go to state 272
    NOT          shift, and go to state 273

    logic_op  go to state 274


State 248

  143 for_stmt: FOR OPEN_PAREN dec_var • logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    ID            shift, and go to state 238
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 239
    FALSE         shift, and go to state 240
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 241
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    logic_expr     go to state 278
    c_term         go to state 243
    comp           go to state 244
    function_call  go to state 57


State 249

  105 scan_stmt: SCAN OPEN_PAREN atomo • CLOSE_PAREN SEMI

    CLOSE_PAREN  shift, and go to state 279


State 250

   75 value: STRING_VALUE •
  110 print_content: STRING_VALUE • PLUS print_content

    PLUS  shift, and go to state 280

    PLUS      [reduce using rule 75 (value)]
    $default  reduce using rule 75 (value)


State 251

  107 print_stmt: PRINT OPEN_PAREN CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 281


State 252

   58 expr: expr • PLUS term
   59     | expr • MINUS term
   60     | expr • ADD_ASSIGN term
   61     | expr • SUB_ASSIGN term
  108 print_content: expr •

    PLUS        shift, and go to state 91
    MINUS       shift, and go to state 92
    ADD_ASSIGN  shift, and go to state 93
    SUB_ASSIGN  shift, and go to state 94

    PLUS      [reduce using rule 108 (print_content)]
    $default  reduce using rule 108 (print_content)


State 253

  106 print_stmt: PRINT OPEN_PAREN print_content • CLOSE_PAREN SEMI
  109 print_content: print_content • PLUS expr

    CLOSE_PAREN  shift, and go to state 282
    PLUS         shift, and go to state 283


State 254

  149 principal: MAIN OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 149 (principal)


State 255

   90 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN • factor SEMI BLOCK_END

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    factor         go to state 284
    value          go to state 60
    function_call  go to state 57


State 256

   89 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts • RETURN factor SEMI BLOCK_END

    RETURN  shift, and go to state 285


State 257

   14 dec_var: type_modifiers type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END • SEMI

    SEMI  shift, and go to state 286


State 258

   20 dec_var: type_modifiers type MULT ID dims ASSIGN BLOCK_BEGIN p_values • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 287


State 259

   10 dec_var: type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI •

    $default  reduce using rule 10 (dec_var)


State 260

   17 dec_var: type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END • SEMI

    SEMI  shift, and go to state 288


State 261

   87 proc: VOID ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 87 (proc)


State 262

   44 atomo: ID dims •
  122 c_term: ID dims •

    CLOSE_PAREN  reduce using rule 122 (c_term)
    SEMI         reduce using rule 122 (c_term)
    AND          reduce using rule 122 (c_term)
    OR           reduce using rule 122 (c_term)
    NOT          reduce using rule 122 (c_term)
    $default     reduce using rule 44 (atomo)


State 263

  127 comp_op: EQ •

    $default  reduce using rule 127 (comp_op)


State 264

  128 comp_op: NEQ •

    $default  reduce using rule 128 (comp_op)


State 265

  132 comp_op: LT •

    $default  reduce using rule 132 (comp_op)


State 266

  131 comp_op: GT •

    $default  reduce using rule 131 (comp_op)


State 267

  130 comp_op: LE •

    $default  reduce using rule 130 (comp_op)


State 268

  129 comp_op: GE •

    $default  reduce using rule 129 (comp_op)


State 269

  126 comp: expr comp_op • expr

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 289
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 270

  142 while_stmt: WHILE OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 290


State 271

  133 logic_op: AND •

    $default  reduce using rule 133 (logic_op)


State 272

  134 logic_op: OR •

    $default  reduce using rule 134 (logic_op)


State 273

  135 logic_op: NOT •

    $default  reduce using rule 135 (logic_op)


State 274

  119 logic_expr: logic_expr logic_op • c_term

    ID            shift, and go to state 238
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 239
    FALSE         shift, and go to state 240
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 241
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    c_term         go to state 291
    comp           go to state 244
    function_call  go to state 57


State 275

  144 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END • WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI

    WHILE  shift, and go to state 292


State 276

  136 switch_stmt: SWITCH COLON OPEN_PAREN ID • CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

    CLOSE_PAREN  shift, and go to state 293


State 277

  113 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END
  114        | IF OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  115        | IF OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  116        | IF OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END else_if_stmt

    BLOCK_BEGIN  shift, and go to state 294


State 278

  119 logic_expr: logic_expr • logic_op c_term
  143 for_stmt: FOR OPEN_PAREN dec_var logic_expr • SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    SEMI  shift, and go to state 295
    AND   shift, and go to state 271
    OR    shift, and go to state 272
    NOT   shift, and go to state 273

    logic_op  go to state 274


State 279

  105 scan_stmt: SCAN OPEN_PAREN atomo CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 296


State 280

  110 print_content: STRING_VALUE PLUS • print_content

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 250
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 252
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    print_content  go to state 297
    function_call  go to state 57


State 281

  107 print_stmt: PRINT OPEN_PAREN CLOSE_PAREN SEMI •

    $default  reduce using rule 107 (print_stmt)


State 282

  106 print_stmt: PRINT OPEN_PAREN print_content CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 298


State 283

  109 print_content: print_content PLUS • expr

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 299
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 284

   90 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor • SEMI BLOCK_END

    SEMI  shift, and go to state 300


State 285

   89 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN • factor SEMI BLOCK_END

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    factor         go to state 301
    value          go to state 60
    function_call  go to state 57


State 286

   14 dec_var: type_modifiers type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI •

    $default  reduce using rule 14 (dec_var)


State 287

   20 dec_var: type_modifiers type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END • SEMI

    SEMI  shift, and go to state 302


State 288

   17 dec_var: type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI •

    $default  reduce using rule 17 (dec_var)


State 289

   58 expr: expr • PLUS term
   59     | expr • MINUS term
   60     | expr • ADD_ASSIGN term
   61     | expr • SUB_ASSIGN term
  126 comp: expr comp_op expr •

    PLUS        shift, and go to state 91
    MINUS       shift, and go to state 92
    ADD_ASSIGN  shift, and go to state 93
    SUB_ASSIGN  shift, and go to state 94

    $default  reduce using rule 126 (comp)


State 290

  142 while_stmt: WHILE OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 303
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 291

  119 logic_expr: logic_expr logic_op c_term •

    $default  reduce using rule 119 (logic_expr)


State 292

  144 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE • OPEN_PAREN logic_expr CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 304


State 293

  136 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN • BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 305


State 294

  113 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END
  114        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  115        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  116        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END else_if_stmt

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 306
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 295

  143 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI • expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 307
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 296

  105 scan_stmt: SCAN OPEN_PAREN atomo CLOSE_PAREN SEMI •

    $default  reduce using rule 105 (scan_stmt)


State 297

  109 print_content: print_content • PLUS expr
  110              | STRING_VALUE PLUS print_content •

    PLUS  shift, and go to state 283

    PLUS      [reduce using rule 110 (print_content)]
    $default  reduce using rule 110 (print_content)


State 298

  106 print_stmt: PRINT OPEN_PAREN print_content CLOSE_PAREN SEMI •

    $default  reduce using rule 106 (print_stmt)


State 299

   58 expr: expr • PLUS term
   59     | expr • MINUS term
   60     | expr • ADD_ASSIGN term
   61     | expr • SUB_ASSIGN term
  109 print_content: print_content PLUS expr •

    PLUS        shift, and go to state 91
    MINUS       shift, and go to state 92
    ADD_ASSIGN  shift, and go to state 93
    SUB_ASSIGN  shift, and go to state 94

    PLUS      [reduce using rule 109 (print_content)]
    $default  reduce using rule 109 (print_content)


State 300

   90 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI • BLOCK_END

    BLOCK_END  shift, and go to state 308


State 301

   89 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor • SEMI BLOCK_END

    SEMI  shift, and go to state 309


State 302

   20 dec_var: type_modifiers type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI •

    $default  reduce using rule 20 (dec_var)


State 303

  142 while_stmt: WHILE OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 310


State 304

  144 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN • logic_expr CLOSE_PAREN SEMI

    ID            shift, and go to state 238
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 239
    FALSE         shift, and go to state 240
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 241
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    logic_expr     go to state 311
    c_term         go to state 243
    comp           go to state 244
    function_call  go to state 57


State 305

  136 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN • switch_cases DEFAULT COLON stmts BLOCK_END

    CASE  shift, and go to state 312

    $default  reduce using rule 137 (switch_cases)

    switch_cases  go to state 313


State 306

  113 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END
  114        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  115        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  116        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END else_if_stmt

    BLOCK_END  shift, and go to state 314


State 307

   58 expr: expr • PLUS term
   59     | expr • MINUS term
   60     | expr • ADD_ASSIGN term
   61     | expr • SUB_ASSIGN term
  143 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    CLOSE_PAREN  shift, and go to state 315
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    ADD_ASSIGN   shift, and go to state 93
    SUB_ASSIGN   shift, and go to state 94


State 308

   90 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END •

    $default  reduce using rule 90 (function)


State 309

   89 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI • BLOCK_END

    BLOCK_END  shift, and go to state 316


State 310

  142 while_stmt: WHILE OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 142 (while_stmt)


State 311

  119 logic_expr: logic_expr • logic_op c_term
  144 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN logic_expr • CLOSE_PAREN SEMI

    CLOSE_PAREN  shift, and go to state 317
    AND          shift, and go to state 271
    OR           shift, and go to state 272
    NOT          shift, and go to state 273

    logic_op  go to state 274


State 312

  138 switch_cases: CASE • value COLON stmts BREAK switch_cases

    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48

    value  go to state 318


State 313

  136 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases • DEFAULT COLON stmts BLOCK_END

    DEFAULT  shift, and go to state 319


State 314

  113 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •
  114        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END • ELSE BLOCK_BEGIN stmts BLOCK_END
  115        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END • else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  116        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END • else_if_stmt

    ELSE     shift, and go to state 320
    ELSE_IF  shift, and go to state 321

    $default  reduce using rule 113 (if_stmt)

    else_if_stmt  go to state 322


State 315

  143 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 323


State 316

   89 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END •

    $default  reduce using rule 89 (function)


State 317

  144 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 324


State 318

  138 switch_cases: CASE value • COLON stmts BREAK switch_cases

    COLON  shift, and go to state 325


State 319

  136 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT • COLON stmts BLOCK_END

    COLON  shift, and go to state 326


State 320

  114 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 327


State 321

  117 else_if_stmt: ELSE_IF • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 328


State 322

  115 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt • ELSE BLOCK_BEGIN stmts BLOCK_END
  116        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt •
  118 else_if_stmt: else_if_stmt • else_if_stmt

    ELSE     shift, and go to state 329
    ELSE_IF  shift, and go to state 321

    $default  reduce using rule 116 (if_stmt)

    else_if_stmt  go to state 330


State 323

  143 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 331
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 324

  144 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI •

    $default  reduce using rule 144 (dowhile_stmt)


State 325

  138 switch_cases: CASE value COLON • stmts BREAK switch_cases

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 332
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 326

  136 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON • stmts BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 333
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 327

  114 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 334
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 328

  117 else_if_stmt: ELSE_IF OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    ID            shift, and go to state 238
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 239
    FALSE         shift, and go to state 240
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 241
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    logic_expr     go to state 335
    c_term         go to state 243
    comp           go to state 244
    function_call  go to state 57


State 329

  115 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 336


State 330

  118 else_if_stmt: else_if_stmt • else_if_stmt
  118             | else_if_stmt else_if_stmt •

    ELSE_IF  shift, and go to state 321

    ELSE_IF   [reduce using rule 118 (else_if_stmt)]
    $default  reduce using rule 118 (else_if_stmt)

    else_if_stmt  go to state 330


State 331

  143 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 337


State 332

  138 switch_cases: CASE value COLON stmts • BREAK switch_cases

    BREAK  shift, and go to state 338


State 333

  136 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts • BLOCK_END

    BLOCK_END  shift, and go to state 339


State 334

  114 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 340


State 335

  117 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  119 logic_expr: logic_expr • logic_op c_term

    CLOSE_PAREN  shift, and go to state 341
    AND          shift, and go to state 271
    OR           shift, and go to state 272
    NOT          shift, and go to state 273

    logic_op  go to state 274


State 336

  115 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 342
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 337

  143 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 143 (for_stmt)


State 338

  138 switch_cases: CASE value COLON stmts BREAK • switch_cases

    CASE  shift, and go to state 312

    $default  reduce using rule 137 (switch_cases)

    switch_cases  go to state 343


State 339

  136 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END •

    $default  reduce using rule 136 (switch_stmt)


State 340

  114 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 114 (if_stmt)


State 341

  117 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 344


State 342

  115 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 345


State 343

  138 switch_cases: CASE value COLON stmts BREAK switch_cases •

    $default  reduce using rule 138 (switch_cases)


State 344

  117 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 176
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 177
    DO       shift, and go to state 178
    SWITCH   shift, and go to state 179
    IF       shift, and go to state 180
    FOR      shift, and go to state 181
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 182
    PRINT    shift, and go to state 183

    dec_var           go to state 184
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 185
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 346
    stmt              go to state 187
    scan_stmt         go to state 188
    print_stmt        go to state 189
    conditional_stmt  go to state 190
    if_stmt           go to state 191
    switch_stmt       go to state 192
    iteration_stmt    go to state 193
    while_stmt        go to state 194
    for_stmt          go to state 195
    dowhile_stmt      go to state 196
    function_call     go to state 197


State 345

  115 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 115 (if_stmt)


State 346

  117 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 347


State 347

  117 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 117 (else_if_stmt)

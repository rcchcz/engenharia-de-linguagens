Terminals unused in grammar

    CONTINUE


State 0 conflicts: 6 shift/reduce
State 14 conflicts: 6 shift/reduce
State 19 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 111 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 246 conflicts: 1 shift/reduce
State 248 conflicts: 1 shift/reduce
State 293 conflicts: 1 shift/reduce
State 295 conflicts: 1 shift/reduce
State 326 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: decs_var subprograms principal subprograms
    2     | decs_var principal subprograms
    3     | decs_var subprograms principal
    4     | decs_var principal

    5 decs_var: ε
    6         | dec_var decs_var
    7         | assigns

    8 dec_var: type ids SEMI
    9        | type ID ASSIGN p_values SEMI
   10        | type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   11        | type ID dims SEMI
   12        | type_modifiers type ids SEMI
   13        | type_modifiers type ID ASSIGN p_values SEMI
   14        | type_modifiers type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   15        | type_modifiers type ID dims SEMI
   16        | type MULT ID ASSIGN p_values SEMI
   17        | type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   18        | type MULT ID dims SEMI
   19        | type_modifiers type MULT ID ASSIGN p_values SEMI
   20        | type_modifiers type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers type MULT ID dims SEMI
   22        | type_modifier STRUCT ID BLOCK_BEGIN decs_var BLOCK_END SEMI
   23        | STRUCT ID BLOCK_BEGIN decs_var BLOCK_END SEMI
   24        | type_modifier STRUCT ID BLOCK_BEGIN BLOCK_END SEMI
   25        | STRUCT ID BLOCK_BEGIN BLOCK_END SEMI

   26 type_modifiers: type_modifier
   27               | type_modifier type_modifier

   28 type_modifier: CONST
   29              | STATIC
   30              | ENUM
   31              | STRUCT

   32 type: INT
   33     | DOUBLE
   34     | FLOAT
   35     | CHAR
   36     | STRING
   37     | BOOLEAN

   38 ids: atomo
   39    | ids COMMA atomo
   40    | atomo COMMA p_values

   41 atomo: ID
   42      | ID dims
   43      | AMPERSAND ID
   44      | MULT ID
   45      | ID DOT ID

   46 dims: OPEN_BRACK CLOSE_BRACK
   47     | OPEN_BRACK CLOSE_BRACK dims
   48     | OPEN_BRACK value CLOSE_BRACK
   49     | OPEN_BRACK value CLOSE_BRACK dims
   50     | OPEN_BRACK expr CLOSE_BRACK
   51     | OPEN_BRACK expr CLOSE_BRACK dims
   52     | OPEN_BRACK ID CLOSE_BRACK
   53     | OPEN_BRACK ID CLOSE_BRACK dims

   54 p_values: expr
   55         | expr COMMA p_values

   56 expr: expr PLUS term
   57     | expr MINUS term
   58     | expr ADD_ASSIGN term
   59     | expr SUB_ASSIGN term
   60     | term

   61 term: term MULT factor
   62     | term DIV factor
   63     | term MODULE factor
   64     | factor

   65 factor: OPEN_PAREN expr CLOSE_PAREN
   66       | atomo
   67       | ID INCREMENT
   68       | ID DECREMENT
   69       | function_call
   70       | value

   71 value: INT_NUMBER
   72      | FLOAT_NUMBER
   73      | STRING_VALUE
   74      | NULL_VALUE

   75 assigns: assign_def
   76        | assign_mat
   77        | assign_def assigns

   78 assign_def: ID ASSIGN expr SEMI

   79 assign_mat: ID dims ASSIGN expr SEMI
   80           | ID dims ASSIGN ID dims SEMI

   81 subprograms: subprogram
   82            | subprogram subprograms

   83 subprogram: proc
   84           | function

   85 proc: VOID ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
   86     | VOID ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

   87 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END
   88         | type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

   89 params: param
   90       | param COMMA params

   91 param: type dims ID
   92      | type ID

   93 stmts: stmt
   94      | stmt stmts

   95 stmt: dec_var
   96     | assigns
   97     | function_call
   98     | conditional_stmt
   99     | iteration_stmt
  100     | scan_stmt
  101     | print_stmt

  102 scan_stmt: SCAN OPEN_PAREN ID CLOSE_PAREN SEMI

  103 print_stmt: PRINT OPEN_PAREN print_content CLOSE_PAREN SEMI
  104           | PRINT OPEN_PAREN CLOSE_PAREN SEMI

  105 print_content: expr
  106              | print_content PLUS expr
  107              | STRING_VALUE PLUS print_content

  108 conditional_stmt: if_stmt
  109                 | switch_stmt

  110 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  111        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  112        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  113        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt

  114 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  115             | else_if_stmt else_if_stmt

  116 logic_expr: logic_expr logic_op c_term
  117           | c_term

  118 c_term: ID
  119       | ID dims
  120       | TRUE
  121       | FALSE
  122       | comp

  123 comp: expr comp_op expr

  124 comp_op: EQ
  125        | NEQ
  126        | GE
  127        | LE
  128        | GT
  129        | LT

  130 logic_op: AND
  131         | OR
  132         | NOT

  133 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

  134 switch_cases: ε
  135             | CASE value COLON stmts BREAK switch_cases

  136 iteration_stmt: while_stmt
  137               | for_stmt
  138               | dowhile_stmt

  139 while_stmt: WHILE OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

  140 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

  141 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI

  142 function_call: ID OPEN_PAREN args CLOSE_PAREN SEMI
  143              | ID OPEN_PAREN CLOSE_PAREN SEMI

  144 args: args arg
  145     | arg

  146 arg: ids

  147 principal: MAIN OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  148          | MAIN OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sValue> (258) 9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25 41 42 43 44 45 52 53 67 68 78 79 80 85 86 87 88 91 92 102 118 119 133 142 143
    INT_NUMBER <sValue> (259) 71
    FLOAT_NUMBER <sValue> (260) 72
    STRING_VALUE <sValue> (261) 73 107
    INT (262) 32
    DOUBLE (263) 33
    FLOAT (264) 34
    CHAR (265) 35
    STRING (266) 36
    BOOLEAN (267) 37
    NULL_VALUE (268) 74
    VOID (269) 85 86
    STRUCT (270) 22 23 24 25 31
    ENUM (271) 30
    TRUE (272) 120
    FALSE (273) 121
    WHILE (274) 139 141
    DO (275) 141
    SWITCH (276) 133
    CASE (277) 135
    DEFAULT (278) 133
    IF (279) 110 111 112 113
    ELSE (280) 111 112
    ELSE_IF (281) 114
    FOR (282) 140
    CONTINUE (283)
    BREAK (284) 135
    CONST (285) 28
    STATIC (286) 29
    RETURN (287) 87 88
    MAIN (288) 147 148
    SCAN (289) 102
    PRINT (290) 103 104
    OPEN_PAREN (291) 65 85 86 87 88 102 103 104 110 111 112 113 114 133 139 140 141 142 143 147 148
    CLOSE_PAREN (292) 65 85 86 87 88 102 103 104 110 111 112 113 114 133 139 140 141 142 143 147 148
    OPEN_BRACK (293) 46 47 48 49 50 51 52 53
    CLOSE_BRACK (294) 46 47 48 49 50 51 52 53
    BLOCK_BEGIN (295) 10 14 17 20 22 23 24 25 85 86 87 88 110 111 112 113 114 133 139 140 141 147 148
    BLOCK_END (296) 10 14 17 20 22 23 24 25 85 86 87 88 110 111 112 113 114 133 139 140 141 147 148
    SEMI (297) 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 78 79 80 87 88 102 103 104 140 141 142 143
    COLON (298) 133 135
    DOT (299) 45
    COMMA (300) 39 40 55 90
    AMPERSAND (301) 43
    PLUS (302) 56 106 107
    MINUS (303) 57
    DIV (304) 62
    MULT (305) 16 17 18 19 20 21 44 61
    INCREMENT (306) 67
    DECREMENT (307) 68
    MODULE (308) 63
    ASSIGN (309) 9 10 13 14 16 17 19 20 78 79 80
    ADD_ASSIGN (310) 58
    SUB_ASSIGN (311) 59
    EQ (312) 124
    NEQ (313) 125
    LT (314) 129
    GT (315) 128
    LE (316) 127
    GE (317) 126
    AND (318) 130
    OR (319) 131
    NOT (320) 132


Nonterminals, with rules where they appear

    $accept (66)
        on left: 0
    prog (67)
        on left: 1 2 3 4
        on right: 0
    decs_var <rec> (68)
        on left: 5 6 7
        on right: 1 2 3 4 6 22 23
    dec_var <rec> (69)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
        on right: 6 95 140
    type_modifiers <rec> (70)
        on left: 26 27
        on right: 12 13 14 15 19 20 21
    type_modifier <rec> (71)
        on left: 28 29 30 31
        on right: 22 24 26 27
    type <rec> (72)
        on left: 32 33 34 35 36 37
        on right: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 87 88 91 92
    ids <rec> (73)
        on left: 38 39 40
        on right: 8 12 39 146
    atomo <rec> (74)
        on left: 41 42 43 44 45
        on right: 38 39 40 66
    dims <rec> (75)
        on left: 46 47 48 49 50 51 52 53
        on right: 10 11 14 15 17 18 20 21 42 47 49 51 53 79 80 91 119
    p_values <rec> (76)
        on left: 54 55
        on right: 9 10 13 14 16 17 19 20 40 55
    expr <rec> (77)
        on left: 56 57 58 59 60
        on right: 50 51 54 55 56 57 58 59 65 78 79 105 106 123 140
    term <rec> (78)
        on left: 61 62 63 64
        on right: 56 57 58 59 60 61 62 63
    factor <rec> (79)
        on left: 65 66 67 68 69 70
        on right: 61 62 63 64 87 88
    value <rec> (80)
        on left: 71 72 73 74
        on right: 48 49 70 135
    assigns <rec> (81)
        on left: 75 76 77
        on right: 7 77 96
    assign_def <rec> (82)
        on left: 78
        on right: 75 77
    assign_mat <rec> (83)
        on left: 79 80
        on right: 76
    subprograms <rec> (84)
        on left: 81 82
        on right: 1 2 3 82
    subprogram <rec> (85)
        on left: 83 84
        on right: 81 82
    proc <rec> (86)
        on left: 85 86
        on right: 83
    function <rec> (87)
        on left: 87 88
        on right: 84
    params <rec> (88)
        on left: 89 90
        on right: 85 87 90 147
    param <rec> (89)
        on left: 91 92
        on right: 89 90
    stmts <rec> (90)
        on left: 93 94
        on right: 85 86 87 88 94 110 111 112 113 114 133 135 139 140 141 147 148
    stmt <rec> (91)
        on left: 95 96 97 98 99 100 101
        on right: 93 94
    scan_stmt <rec> (92)
        on left: 102
        on right: 100
    print_stmt <rec> (93)
        on left: 103 104
        on right: 101
    print_content <rec> (94)
        on left: 105 106 107
        on right: 103 106 107
    conditional_stmt <rec> (95)
        on left: 108 109
        on right: 98
    if_stmt <rec> (96)
        on left: 110 111 112 113
        on right: 108
    else_if_stmt <rec> (97)
        on left: 114 115
        on right: 112 113 115
    logic_expr <rec> (98)
        on left: 116 117
        on right: 110 111 112 113 114 116 139 140 141
    c_term <rec> (99)
        on left: 118 119 120 121 122
        on right: 116 117
    comp <rec> (100)
        on left: 123
        on right: 122
    comp_op <rec> (101)
        on left: 124 125 126 127 128 129
        on right: 123
    logic_op <rec> (102)
        on left: 130 131 132
        on right: 116
    switch_stmt <rec> (103)
        on left: 133
        on right: 109
    switch_cases <rec> (104)
        on left: 134 135
        on right: 133 135
    iteration_stmt <rec> (105)
        on left: 136 137 138
        on right: 99
    while_stmt <rec> (106)
        on left: 139
        on right: 136
    for_stmt <rec> (107)
        on left: 140
        on right: 137
    dowhile_stmt <rec> (108)
        on left: 141
        on right: 138
    function_call <rec> (109)
        on left: 142 143
        on right: 69 97
    args <rec> (110)
        on left: 144 145
        on right: 142 144
    arg <rec> (111)
        on left: 146
        on right: 144 145
    principal <rec> (112)
        on left: 147 148
        on right: 1 2 3 4


State 0

    0 $accept: • prog $end

    ID       shift, and go to state 1
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11

    INT       [reduce using rule 5 (decs_var)]
    DOUBLE    [reduce using rule 5 (decs_var)]
    FLOAT     [reduce using rule 5 (decs_var)]
    CHAR      [reduce using rule 5 (decs_var)]
    STRING    [reduce using rule 5 (decs_var)]
    BOOLEAN   [reduce using rule 5 (decs_var)]
    $default  reduce using rule 5 (decs_var)

    prog            go to state 12
    decs_var        go to state 13
    dec_var         go to state 14
    type_modifiers  go to state 15
    type_modifier   go to state 16
    type            go to state 17
    assigns         go to state 18
    assign_def      go to state 19
    assign_mat      go to state 20


State 1

   78 assign_def: ID • ASSIGN expr SEMI
   79 assign_mat: ID • dims ASSIGN expr SEMI
   80           | ID • dims ASSIGN ID dims SEMI

    OPEN_BRACK  shift, and go to state 21
    ASSIGN      shift, and go to state 22

    dims  go to state 23


State 2

   32 type: INT •

    $default  reduce using rule 32 (type)


State 3

   33 type: DOUBLE •

    $default  reduce using rule 33 (type)


State 4

   34 type: FLOAT •

    $default  reduce using rule 34 (type)


State 5

   35 type: CHAR •

    $default  reduce using rule 35 (type)


State 6

   36 type: STRING •

    $default  reduce using rule 36 (type)


State 7

   37 type: BOOLEAN •

    $default  reduce using rule 37 (type)


State 8

   23 dec_var: STRUCT • ID BLOCK_BEGIN decs_var BLOCK_END SEMI
   25        | STRUCT • ID BLOCK_BEGIN BLOCK_END SEMI
   31 type_modifier: STRUCT •

    ID  shift, and go to state 24

    $default  reduce using rule 31 (type_modifier)


State 9

   30 type_modifier: ENUM •

    $default  reduce using rule 30 (type_modifier)


State 10

   28 type_modifier: CONST •

    $default  reduce using rule 28 (type_modifier)


State 11

   29 type_modifier: STATIC •

    $default  reduce using rule 29 (type_modifier)


State 12

    0 $accept: prog • $end

    $end  shift, and go to state 25


State 13

    1 prog: decs_var • subprograms principal subprograms
    2     | decs_var • principal subprograms
    3     | decs_var • subprograms principal
    4     | decs_var • principal

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 26
    MAIN     shift, and go to state 27

    type         go to state 28
    subprograms  go to state 29
    subprogram   go to state 30
    proc         go to state 31
    function     go to state 32
    principal    go to state 33


State 14

    6 decs_var: dec_var • decs_var

    ID       shift, and go to state 1
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11

    INT       [reduce using rule 5 (decs_var)]
    DOUBLE    [reduce using rule 5 (decs_var)]
    FLOAT     [reduce using rule 5 (decs_var)]
    CHAR      [reduce using rule 5 (decs_var)]
    STRING    [reduce using rule 5 (decs_var)]
    BOOLEAN   [reduce using rule 5 (decs_var)]
    $default  reduce using rule 5 (decs_var)

    decs_var        go to state 34
    dec_var         go to state 14
    type_modifiers  go to state 15
    type_modifier   go to state 16
    type            go to state 17
    assigns         go to state 18
    assign_def      go to state 19
    assign_mat      go to state 20


State 15

   12 dec_var: type_modifiers • type ids SEMI
   13        | type_modifiers • type ID ASSIGN p_values SEMI
   14        | type_modifiers • type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   15        | type_modifiers • type ID dims SEMI
   19        | type_modifiers • type MULT ID ASSIGN p_values SEMI
   20        | type_modifiers • type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers • type MULT ID dims SEMI

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    type  go to state 35


State 16

   22 dec_var: type_modifier • STRUCT ID BLOCK_BEGIN decs_var BLOCK_END SEMI
   24        | type_modifier • STRUCT ID BLOCK_BEGIN BLOCK_END SEMI
   26 type_modifiers: type_modifier •
   27               | type_modifier • type_modifier

    STRUCT  shift, and go to state 36
    ENUM    shift, and go to state 9
    CONST   shift, and go to state 10
    STATIC  shift, and go to state 11

    $default  reduce using rule 26 (type_modifiers)

    type_modifier  go to state 37


State 17

    8 dec_var: type • ids SEMI
    9        | type • ID ASSIGN p_values SEMI
   10        | type • ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   11        | type • ID dims SEMI
   16        | type • MULT ID ASSIGN p_values SEMI
   17        | type • MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   18        | type • MULT ID dims SEMI

    ID         shift, and go to state 38
    AMPERSAND  shift, and go to state 39
    MULT       shift, and go to state 40

    ids    go to state 41
    atomo  go to state 42


State 18

    7 decs_var: assigns •

    $default  reduce using rule 7 (decs_var)


State 19

   75 assigns: assign_def •
   77        | assign_def • assigns

    ID  shift, and go to state 1

    ID        [reduce using rule 75 (assigns)]
    $default  reduce using rule 75 (assigns)

    assigns     go to state 43
    assign_def  go to state 19
    assign_mat  go to state 20


State 20

   76 assigns: assign_mat •

    $default  reduce using rule 76 (assigns)


State 21

   46 dims: OPEN_BRACK • CLOSE_BRACK
   47     | OPEN_BRACK • CLOSE_BRACK dims
   48     | OPEN_BRACK • value CLOSE_BRACK
   49     | OPEN_BRACK • value CLOSE_BRACK dims
   50     | OPEN_BRACK • expr CLOSE_BRACK
   51     | OPEN_BRACK • expr CLOSE_BRACK dims
   52     | OPEN_BRACK • ID CLOSE_BRACK
   53     | OPEN_BRACK • ID CLOSE_BRACK dims

    ID            shift, and go to state 44
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    CLOSE_BRACK   shift, and go to state 50
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 53
    term           go to state 54
    factor         go to state 55
    value          go to state 56
    function_call  go to state 57


State 22

   78 assign_def: ID ASSIGN • expr SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 59
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 23

   79 assign_mat: ID dims • ASSIGN expr SEMI
   80           | ID dims • ASSIGN ID dims SEMI

    ASSIGN  shift, and go to state 61


State 24

   23 dec_var: STRUCT ID • BLOCK_BEGIN decs_var BLOCK_END SEMI
   25        | STRUCT ID • BLOCK_BEGIN BLOCK_END SEMI

    BLOCK_BEGIN  shift, and go to state 62


State 25

    0 $accept: prog $end •

    $default  accept


State 26

   85 proc: VOID • ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
   86     | VOID • ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    ID  shift, and go to state 63


State 27

  147 principal: MAIN • OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  148          | MAIN • OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 64


State 28

   87 function: type • ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END
   88         | type • ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    ID  shift, and go to state 65


State 29

    1 prog: decs_var subprograms • principal subprograms
    3     | decs_var subprograms • principal

    MAIN  shift, and go to state 27

    principal  go to state 66


State 30

   81 subprograms: subprogram •
   82            | subprogram • subprograms

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 26

    $default  reduce using rule 81 (subprograms)

    type         go to state 28
    subprograms  go to state 67
    subprogram   go to state 30
    proc         go to state 31
    function     go to state 32


State 31

   83 subprogram: proc •

    $default  reduce using rule 83 (subprogram)


State 32

   84 subprogram: function •

    $default  reduce using rule 84 (subprogram)


State 33

    2 prog: decs_var principal • subprograms
    4     | decs_var principal •

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 26

    $default  reduce using rule 4 (prog)

    type         go to state 28
    subprograms  go to state 68
    subprogram   go to state 30
    proc         go to state 31
    function     go to state 32


State 34

    6 decs_var: dec_var decs_var •

    $default  reduce using rule 6 (decs_var)


State 35

   12 dec_var: type_modifiers type • ids SEMI
   13        | type_modifiers type • ID ASSIGN p_values SEMI
   14        | type_modifiers type • ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   15        | type_modifiers type • ID dims SEMI
   19        | type_modifiers type • MULT ID ASSIGN p_values SEMI
   20        | type_modifiers type • MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers type • MULT ID dims SEMI

    ID         shift, and go to state 69
    AMPERSAND  shift, and go to state 39
    MULT       shift, and go to state 70

    ids    go to state 71
    atomo  go to state 42


State 36

   22 dec_var: type_modifier STRUCT • ID BLOCK_BEGIN decs_var BLOCK_END SEMI
   24        | type_modifier STRUCT • ID BLOCK_BEGIN BLOCK_END SEMI
   31 type_modifier: STRUCT •

    ID  shift, and go to state 72

    $default  reduce using rule 31 (type_modifier)


State 37

   27 type_modifiers: type_modifier type_modifier •

    $default  reduce using rule 27 (type_modifiers)


State 38

    9 dec_var: type ID • ASSIGN p_values SEMI
   10        | type ID • dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   11        | type ID • dims SEMI
   41 atomo: ID •
   42      | ID • dims
   45      | ID • DOT ID

    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 73
    ASSIGN      shift, and go to state 74

    $default  reduce using rule 41 (atomo)

    dims  go to state 75


State 39

   43 atomo: AMPERSAND • ID

    ID  shift, and go to state 76


State 40

   16 dec_var: type MULT • ID ASSIGN p_values SEMI
   17        | type MULT • ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   18        | type MULT • ID dims SEMI
   44 atomo: MULT • ID

    ID  shift, and go to state 77


State 41

    8 dec_var: type ids • SEMI
   39 ids: ids • COMMA atomo

    SEMI   shift, and go to state 78
    COMMA  shift, and go to state 79


State 42

   38 ids: atomo •
   40    | atomo • COMMA p_values

    COMMA  shift, and go to state 80

    COMMA     [reduce using rule 38 (ids)]
    $default  reduce using rule 38 (ids)


State 43

   77 assigns: assign_def assigns •

    $default  reduce using rule 77 (assigns)


State 44

   41 atomo: ID •
   42      | ID • dims
   45      | ID • DOT ID
   52 dims: OPEN_BRACK ID • CLOSE_BRACK
   53     | OPEN_BRACK ID • CLOSE_BRACK dims
   67 factor: ID • INCREMENT
   68       | ID • DECREMENT
  142 function_call: ID • OPEN_PAREN args CLOSE_PAREN SEMI
  143              | ID • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN   shift, and go to state 81
    OPEN_BRACK   shift, and go to state 21
    CLOSE_BRACK  shift, and go to state 82
    DOT          shift, and go to state 73
    INCREMENT    shift, and go to state 83
    DECREMENT    shift, and go to state 84

    CLOSE_BRACK  [reduce using rule 41 (atomo)]
    $default     reduce using rule 41 (atomo)

    dims  go to state 85


State 45

   71 value: INT_NUMBER •

    $default  reduce using rule 71 (value)


State 46

   72 value: FLOAT_NUMBER •

    $default  reduce using rule 72 (value)


State 47

   73 value: STRING_VALUE •

    $default  reduce using rule 73 (value)


State 48

   74 value: NULL_VALUE •

    $default  reduce using rule 74 (value)


State 49

   65 factor: OPEN_PAREN • expr CLOSE_PAREN

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 86
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 50

   46 dims: OPEN_BRACK CLOSE_BRACK •
   47     | OPEN_BRACK CLOSE_BRACK • dims

    OPEN_BRACK  shift, and go to state 21

    $default  reduce using rule 46 (dims)

    dims  go to state 87


State 51

   44 atomo: MULT • ID

    ID  shift, and go to state 88


State 52

   66 factor: atomo •

    $default  reduce using rule 66 (factor)


State 53

   50 dims: OPEN_BRACK expr • CLOSE_BRACK
   51     | OPEN_BRACK expr • CLOSE_BRACK dims
   56 expr: expr • PLUS term
   57     | expr • MINUS term
   58     | expr • ADD_ASSIGN term
   59     | expr • SUB_ASSIGN term

    CLOSE_BRACK  shift, and go to state 89
    PLUS         shift, and go to state 90
    MINUS        shift, and go to state 91
    ADD_ASSIGN   shift, and go to state 92
    SUB_ASSIGN   shift, and go to state 93


State 54

   60 expr: term •
   61 term: term • MULT factor
   62     | term • DIV factor
   63     | term • MODULE factor

    DIV     shift, and go to state 94
    MULT    shift, and go to state 95
    MODULE  shift, and go to state 96

    MULT      [reduce using rule 60 (expr)]
    $default  reduce using rule 60 (expr)


State 55

   64 term: factor •

    $default  reduce using rule 64 (term)


State 56

   48 dims: OPEN_BRACK value • CLOSE_BRACK
   49     | OPEN_BRACK value • CLOSE_BRACK dims
   70 factor: value •

    CLOSE_BRACK  shift, and go to state 97

    CLOSE_BRACK  [reduce using rule 70 (factor)]
    $default     reduce using rule 70 (factor)


State 57

   69 factor: function_call •

    $default  reduce using rule 69 (factor)


State 58

   41 atomo: ID •
   42      | ID • dims
   45      | ID • DOT ID
   67 factor: ID • INCREMENT
   68       | ID • DECREMENT
  142 function_call: ID • OPEN_PAREN args CLOSE_PAREN SEMI
  143              | ID • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 81
    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 73
    INCREMENT   shift, and go to state 83
    DECREMENT   shift, and go to state 84

    $default  reduce using rule 41 (atomo)

    dims  go to state 85


State 59

   56 expr: expr • PLUS term
   57     | expr • MINUS term
   58     | expr • ADD_ASSIGN term
   59     | expr • SUB_ASSIGN term
   78 assign_def: ID ASSIGN expr • SEMI

    SEMI        shift, and go to state 98
    PLUS        shift, and go to state 90
    MINUS       shift, and go to state 91
    ADD_ASSIGN  shift, and go to state 92
    SUB_ASSIGN  shift, and go to state 93


State 60

   70 factor: value •

    $default  reduce using rule 70 (factor)


State 61

   79 assign_mat: ID dims ASSIGN • expr SEMI
   80           | ID dims ASSIGN • ID dims SEMI

    ID            shift, and go to state 99
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 100
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 62

   23 dec_var: STRUCT ID BLOCK_BEGIN • decs_var BLOCK_END SEMI
   25        | STRUCT ID BLOCK_BEGIN • BLOCK_END SEMI

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    DOUBLE     shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    CONST      shift, and go to state 10
    STATIC     shift, and go to state 11
    BLOCK_END  shift, and go to state 101

    BLOCK_END  [reduce using rule 5 (decs_var)]

    decs_var        go to state 102
    dec_var         go to state 14
    type_modifiers  go to state 15
    type_modifier   go to state 16
    type            go to state 17
    assigns         go to state 18
    assign_def      go to state 19
    assign_mat      go to state 20


State 63

   85 proc: VOID ID • OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
   86     | VOID ID • OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 103


State 64

  147 principal: MAIN OPEN_PAREN • params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  148          | MAIN OPEN_PAREN • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    INT          shift, and go to state 2
    DOUBLE       shift, and go to state 3
    FLOAT        shift, and go to state 4
    CHAR         shift, and go to state 5
    STRING       shift, and go to state 6
    BOOLEAN      shift, and go to state 7
    CLOSE_PAREN  shift, and go to state 104

    type    go to state 105
    params  go to state 106
    param   go to state 107


State 65

   87 function: type ID • OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END
   88         | type ID • OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    OPEN_PAREN  shift, and go to state 108


State 66

    1 prog: decs_var subprograms principal • subprograms
    3     | decs_var subprograms principal •

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    VOID     shift, and go to state 26

    $default  reduce using rule 3 (prog)

    type         go to state 28
    subprograms  go to state 109
    subprogram   go to state 30
    proc         go to state 31
    function     go to state 32


State 67

   82 subprograms: subprogram subprograms •

    $default  reduce using rule 82 (subprograms)


State 68

    2 prog: decs_var principal subprograms •

    $default  reduce using rule 2 (prog)


State 69

   13 dec_var: type_modifiers type ID • ASSIGN p_values SEMI
   14        | type_modifiers type ID • dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   15        | type_modifiers type ID • dims SEMI
   41 atomo: ID •
   42      | ID • dims
   45      | ID • DOT ID

    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 73
    ASSIGN      shift, and go to state 110

    $default  reduce using rule 41 (atomo)

    dims  go to state 111


State 70

   19 dec_var: type_modifiers type MULT • ID ASSIGN p_values SEMI
   20        | type_modifiers type MULT • ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers type MULT • ID dims SEMI
   44 atomo: MULT • ID

    ID  shift, and go to state 112


State 71

   12 dec_var: type_modifiers type ids • SEMI
   39 ids: ids • COMMA atomo

    SEMI   shift, and go to state 113
    COMMA  shift, and go to state 79


State 72

   22 dec_var: type_modifier STRUCT ID • BLOCK_BEGIN decs_var BLOCK_END SEMI
   24        | type_modifier STRUCT ID • BLOCK_BEGIN BLOCK_END SEMI

    BLOCK_BEGIN  shift, and go to state 114


State 73

   45 atomo: ID DOT • ID

    ID  shift, and go to state 115


State 74

    9 dec_var: type ID ASSIGN • p_values SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 116
    expr           go to state 117
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 75

   10 dec_var: type ID dims • ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   11        | type ID dims • SEMI
   42 atomo: ID dims •

    SEMI    shift, and go to state 118
    ASSIGN  shift, and go to state 119

    SEMI      [reduce using rule 42 (atomo)]
    $default  reduce using rule 42 (atomo)


State 76

   43 atomo: AMPERSAND ID •

    $default  reduce using rule 43 (atomo)


State 77

   16 dec_var: type MULT ID • ASSIGN p_values SEMI
   17        | type MULT ID • dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   18        | type MULT ID • dims SEMI
   44 atomo: MULT ID •

    OPEN_BRACK  shift, and go to state 21
    ASSIGN      shift, and go to state 120

    $default  reduce using rule 44 (atomo)

    dims  go to state 121


State 78

    8 dec_var: type ids SEMI •

    $default  reduce using rule 8 (dec_var)


State 79

   39 ids: ids COMMA • atomo

    ID         shift, and go to state 122
    AMPERSAND  shift, and go to state 39
    MULT       shift, and go to state 51

    atomo  go to state 123


State 80

   40 ids: atomo COMMA • p_values

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 124
    expr           go to state 117
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 81

  142 function_call: ID OPEN_PAREN • args CLOSE_PAREN SEMI
  143              | ID OPEN_PAREN • CLOSE_PAREN SEMI

    ID           shift, and go to state 122
    CLOSE_PAREN  shift, and go to state 125
    AMPERSAND    shift, and go to state 39
    MULT         shift, and go to state 51

    ids    go to state 126
    atomo  go to state 42
    args   go to state 127
    arg    go to state 128


State 82

   52 dims: OPEN_BRACK ID CLOSE_BRACK •
   53     | OPEN_BRACK ID CLOSE_BRACK • dims

    OPEN_BRACK  shift, and go to state 21

    $default  reduce using rule 52 (dims)

    dims  go to state 129


State 83

   67 factor: ID INCREMENT •

    $default  reduce using rule 67 (factor)


State 84

   68 factor: ID DECREMENT •

    $default  reduce using rule 68 (factor)


State 85

   42 atomo: ID dims •

    $default  reduce using rule 42 (atomo)


State 86

   56 expr: expr • PLUS term
   57     | expr • MINUS term
   58     | expr • ADD_ASSIGN term
   59     | expr • SUB_ASSIGN term
   65 factor: OPEN_PAREN expr • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 130
    PLUS         shift, and go to state 90
    MINUS        shift, and go to state 91
    ADD_ASSIGN   shift, and go to state 92
    SUB_ASSIGN   shift, and go to state 93


State 87

   47 dims: OPEN_BRACK CLOSE_BRACK dims •

    $default  reduce using rule 47 (dims)


State 88

   44 atomo: MULT ID •

    $default  reduce using rule 44 (atomo)


State 89

   50 dims: OPEN_BRACK expr CLOSE_BRACK •
   51     | OPEN_BRACK expr CLOSE_BRACK • dims

    OPEN_BRACK  shift, and go to state 21

    $default  reduce using rule 50 (dims)

    dims  go to state 131


State 90

   56 expr: expr PLUS • term

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    term           go to state 132
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 91

   57 expr: expr MINUS • term

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    term           go to state 133
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 92

   58 expr: expr ADD_ASSIGN • term

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    term           go to state 134
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 93

   59 expr: expr SUB_ASSIGN • term

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    term           go to state 135
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 94

   62 term: term DIV • factor

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    factor         go to state 136
    value          go to state 60
    function_call  go to state 57


State 95

   61 term: term MULT • factor

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    factor         go to state 137
    value          go to state 60
    function_call  go to state 57


State 96

   63 term: term MODULE • factor

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    factor         go to state 138
    value          go to state 60
    function_call  go to state 57


State 97

   48 dims: OPEN_BRACK value CLOSE_BRACK •
   49     | OPEN_BRACK value CLOSE_BRACK • dims

    OPEN_BRACK  shift, and go to state 21

    $default  reduce using rule 48 (dims)

    dims  go to state 139


State 98

   78 assign_def: ID ASSIGN expr SEMI •

    $default  reduce using rule 78 (assign_def)


State 99

   41 atomo: ID •
   42      | ID • dims
   45      | ID • DOT ID
   67 factor: ID • INCREMENT
   68       | ID • DECREMENT
   80 assign_mat: ID dims ASSIGN ID • dims SEMI
  142 function_call: ID • OPEN_PAREN args CLOSE_PAREN SEMI
  143              | ID • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 81
    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 73
    INCREMENT   shift, and go to state 83
    DECREMENT   shift, and go to state 84

    $default  reduce using rule 41 (atomo)

    dims  go to state 140


State 100

   56 expr: expr • PLUS term
   57     | expr • MINUS term
   58     | expr • ADD_ASSIGN term
   59     | expr • SUB_ASSIGN term
   79 assign_mat: ID dims ASSIGN expr • SEMI

    SEMI        shift, and go to state 141
    PLUS        shift, and go to state 90
    MINUS       shift, and go to state 91
    ADD_ASSIGN  shift, and go to state 92
    SUB_ASSIGN  shift, and go to state 93


State 101

   25 dec_var: STRUCT ID BLOCK_BEGIN BLOCK_END • SEMI

    SEMI  shift, and go to state 142


State 102

   23 dec_var: STRUCT ID BLOCK_BEGIN decs_var • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 143


State 103

   85 proc: VOID ID OPEN_PAREN • params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
   86     | VOID ID OPEN_PAREN • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    INT          shift, and go to state 2
    DOUBLE       shift, and go to state 3
    FLOAT        shift, and go to state 4
    CHAR         shift, and go to state 5
    STRING       shift, and go to state 6
    BOOLEAN      shift, and go to state 7
    CLOSE_PAREN  shift, and go to state 144

    type    go to state 105
    params  go to state 145
    param   go to state 107


State 104

  148 principal: MAIN OPEN_PAREN CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 146


State 105

   91 param: type • dims ID
   92      | type • ID

    ID          shift, and go to state 147
    OPEN_BRACK  shift, and go to state 21

    dims  go to state 148


State 106

  147 principal: MAIN OPEN_PAREN params • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    CLOSE_PAREN  shift, and go to state 149


State 107

   89 params: param •
   90       | param • COMMA params

    COMMA  shift, and go to state 150

    $default  reduce using rule 89 (params)


State 108

   87 function: type ID OPEN_PAREN • params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END
   88         | type ID OPEN_PAREN • CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    INT          shift, and go to state 2
    DOUBLE       shift, and go to state 3
    FLOAT        shift, and go to state 4
    CHAR         shift, and go to state 5
    STRING       shift, and go to state 6
    BOOLEAN      shift, and go to state 7
    CLOSE_PAREN  shift, and go to state 151

    type    go to state 105
    params  go to state 152
    param   go to state 107


State 109

    1 prog: decs_var subprograms principal subprograms •

    $default  reduce using rule 1 (prog)


State 110

   13 dec_var: type_modifiers type ID ASSIGN • p_values SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 153
    expr           go to state 117
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 111

   14 dec_var: type_modifiers type ID dims • ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   15        | type_modifiers type ID dims • SEMI
   42 atomo: ID dims •

    SEMI    shift, and go to state 154
    ASSIGN  shift, and go to state 155

    SEMI      [reduce using rule 42 (atomo)]
    $default  reduce using rule 42 (atomo)


State 112

   19 dec_var: type_modifiers type MULT ID • ASSIGN p_values SEMI
   20        | type_modifiers type MULT ID • dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers type MULT ID • dims SEMI
   44 atomo: MULT ID •

    OPEN_BRACK  shift, and go to state 21
    ASSIGN      shift, and go to state 156

    $default  reduce using rule 44 (atomo)

    dims  go to state 157


State 113

   12 dec_var: type_modifiers type ids SEMI •

    $default  reduce using rule 12 (dec_var)


State 114

   22 dec_var: type_modifier STRUCT ID BLOCK_BEGIN • decs_var BLOCK_END SEMI
   24        | type_modifier STRUCT ID BLOCK_BEGIN • BLOCK_END SEMI

    ID         shift, and go to state 1
    INT        shift, and go to state 2
    DOUBLE     shift, and go to state 3
    FLOAT      shift, and go to state 4
    CHAR       shift, and go to state 5
    STRING     shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    STRUCT     shift, and go to state 8
    ENUM       shift, and go to state 9
    CONST      shift, and go to state 10
    STATIC     shift, and go to state 11
    BLOCK_END  shift, and go to state 158

    BLOCK_END  [reduce using rule 5 (decs_var)]

    decs_var        go to state 159
    dec_var         go to state 14
    type_modifiers  go to state 15
    type_modifier   go to state 16
    type            go to state 17
    assigns         go to state 18
    assign_def      go to state 19
    assign_mat      go to state 20


State 115

   45 atomo: ID DOT ID •

    $default  reduce using rule 45 (atomo)


State 116

    9 dec_var: type ID ASSIGN p_values • SEMI

    SEMI  shift, and go to state 160


State 117

   54 p_values: expr •
   55         | expr • COMMA p_values
   56 expr: expr • PLUS term
   57     | expr • MINUS term
   58     | expr • ADD_ASSIGN term
   59     | expr • SUB_ASSIGN term

    COMMA       shift, and go to state 161
    PLUS        shift, and go to state 90
    MINUS       shift, and go to state 91
    ADD_ASSIGN  shift, and go to state 92
    SUB_ASSIGN  shift, and go to state 93

    COMMA     [reduce using rule 54 (p_values)]
    $default  reduce using rule 54 (p_values)


State 118

   11 dec_var: type ID dims SEMI •

    $default  reduce using rule 11 (dec_var)


State 119

   10 dec_var: type ID dims ASSIGN • BLOCK_BEGIN p_values BLOCK_END SEMI

    BLOCK_BEGIN  shift, and go to state 162


State 120

   16 dec_var: type MULT ID ASSIGN • p_values SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 163
    expr           go to state 117
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 121

   17 dec_var: type MULT ID dims • ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   18        | type MULT ID dims • SEMI

    SEMI    shift, and go to state 164
    ASSIGN  shift, and go to state 165


State 122

   41 atomo: ID •
   42      | ID • dims
   45      | ID • DOT ID

    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 73

    $default  reduce using rule 41 (atomo)

    dims  go to state 85


State 123

   39 ids: ids COMMA atomo •

    $default  reduce using rule 39 (ids)


State 124

   40 ids: atomo COMMA p_values •

    $default  reduce using rule 40 (ids)


State 125

  143 function_call: ID OPEN_PAREN CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 166


State 126

   39 ids: ids • COMMA atomo
  146 arg: ids •

    COMMA  shift, and go to state 79

    $default  reduce using rule 146 (arg)


State 127

  142 function_call: ID OPEN_PAREN args • CLOSE_PAREN SEMI
  144 args: args • arg

    ID           shift, and go to state 122
    CLOSE_PAREN  shift, and go to state 167
    AMPERSAND    shift, and go to state 39
    MULT         shift, and go to state 51

    ids    go to state 126
    atomo  go to state 42
    arg    go to state 168


State 128

  145 args: arg •

    $default  reduce using rule 145 (args)


State 129

   53 dims: OPEN_BRACK ID CLOSE_BRACK dims •

    $default  reduce using rule 53 (dims)


State 130

   65 factor: OPEN_PAREN expr CLOSE_PAREN •

    $default  reduce using rule 65 (factor)


State 131

   51 dims: OPEN_BRACK expr CLOSE_BRACK dims •

    $default  reduce using rule 51 (dims)


State 132

   56 expr: expr PLUS term •
   61 term: term • MULT factor
   62     | term • DIV factor
   63     | term • MODULE factor

    DIV     shift, and go to state 94
    MULT    shift, and go to state 95
    MODULE  shift, and go to state 96

    MULT      [reduce using rule 56 (expr)]
    $default  reduce using rule 56 (expr)


State 133

   57 expr: expr MINUS term •
   61 term: term • MULT factor
   62     | term • DIV factor
   63     | term • MODULE factor

    DIV     shift, and go to state 94
    MULT    shift, and go to state 95
    MODULE  shift, and go to state 96

    MULT      [reduce using rule 57 (expr)]
    $default  reduce using rule 57 (expr)


State 134

   58 expr: expr ADD_ASSIGN term •
   61 term: term • MULT factor
   62     | term • DIV factor
   63     | term • MODULE factor

    DIV     shift, and go to state 94
    MULT    shift, and go to state 95
    MODULE  shift, and go to state 96

    MULT      [reduce using rule 58 (expr)]
    $default  reduce using rule 58 (expr)


State 135

   59 expr: expr SUB_ASSIGN term •
   61 term: term • MULT factor
   62     | term • DIV factor
   63     | term • MODULE factor

    DIV     shift, and go to state 94
    MULT    shift, and go to state 95
    MODULE  shift, and go to state 96

    MULT      [reduce using rule 59 (expr)]
    $default  reduce using rule 59 (expr)


State 136

   62 term: term DIV factor •

    $default  reduce using rule 62 (term)


State 137

   61 term: term MULT factor •

    $default  reduce using rule 61 (term)


State 138

   63 term: term MODULE factor •

    $default  reduce using rule 63 (term)


State 139

   49 dims: OPEN_BRACK value CLOSE_BRACK dims •

    $default  reduce using rule 49 (dims)


State 140

   42 atomo: ID dims •
   80 assign_mat: ID dims ASSIGN ID dims • SEMI

    SEMI  shift, and go to state 169

    SEMI      [reduce using rule 42 (atomo)]
    $default  reduce using rule 42 (atomo)


State 141

   79 assign_mat: ID dims ASSIGN expr SEMI •

    $default  reduce using rule 79 (assign_mat)


State 142

   25 dec_var: STRUCT ID BLOCK_BEGIN BLOCK_END SEMI •

    $default  reduce using rule 25 (dec_var)


State 143

   23 dec_var: STRUCT ID BLOCK_BEGIN decs_var BLOCK_END • SEMI

    SEMI  shift, and go to state 170


State 144

   86 proc: VOID ID OPEN_PAREN CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 171


State 145

   85 proc: VOID ID OPEN_PAREN params • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    CLOSE_PAREN  shift, and go to state 172


State 146

  148 principal: MAIN OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 183
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 147

   92 param: type ID •

    $default  reduce using rule 92 (param)


State 148

   91 param: type dims • ID

    ID  shift, and go to state 195


State 149

  147 principal: MAIN OPEN_PAREN params CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 196


State 150

   90 params: param COMMA • params

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7

    type    go to state 105
    params  go to state 197
    param   go to state 107


State 151

   88 function: type ID OPEN_PAREN CLOSE_PAREN • BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    BLOCK_BEGIN  shift, and go to state 198


State 152

   87 function: type ID OPEN_PAREN params • CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    CLOSE_PAREN  shift, and go to state 199


State 153

   13 dec_var: type_modifiers type ID ASSIGN p_values • SEMI

    SEMI  shift, and go to state 200


State 154

   15 dec_var: type_modifiers type ID dims SEMI •

    $default  reduce using rule 15 (dec_var)


State 155

   14 dec_var: type_modifiers type ID dims ASSIGN • BLOCK_BEGIN p_values BLOCK_END SEMI

    BLOCK_BEGIN  shift, and go to state 201


State 156

   19 dec_var: type_modifiers type MULT ID ASSIGN • p_values SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 202
    expr           go to state 117
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 157

   20 dec_var: type_modifiers type MULT ID dims • ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI
   21        | type_modifiers type MULT ID dims • SEMI

    SEMI    shift, and go to state 203
    ASSIGN  shift, and go to state 204


State 158

   24 dec_var: type_modifier STRUCT ID BLOCK_BEGIN BLOCK_END • SEMI

    SEMI  shift, and go to state 205


State 159

   22 dec_var: type_modifier STRUCT ID BLOCK_BEGIN decs_var • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 206


State 160

    9 dec_var: type ID ASSIGN p_values SEMI •

    $default  reduce using rule 9 (dec_var)


State 161

   55 p_values: expr COMMA • p_values

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 207
    expr           go to state 117
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 162

   10 dec_var: type ID dims ASSIGN BLOCK_BEGIN • p_values BLOCK_END SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 208
    expr           go to state 117
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 163

   16 dec_var: type MULT ID ASSIGN p_values • SEMI

    SEMI  shift, and go to state 209


State 164

   18 dec_var: type MULT ID dims SEMI •

    $default  reduce using rule 18 (dec_var)


State 165

   17 dec_var: type MULT ID dims ASSIGN • BLOCK_BEGIN p_values BLOCK_END SEMI

    BLOCK_BEGIN  shift, and go to state 210


State 166

  143 function_call: ID OPEN_PAREN CLOSE_PAREN SEMI •

    $default  reduce using rule 143 (function_call)


State 167

  142 function_call: ID OPEN_PAREN args CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 211


State 168

  144 args: args arg •

    $default  reduce using rule 144 (args)


State 169

   80 assign_mat: ID dims ASSIGN ID dims SEMI •

    $default  reduce using rule 80 (assign_mat)


State 170

   23 dec_var: STRUCT ID BLOCK_BEGIN decs_var BLOCK_END SEMI •

    $default  reduce using rule 23 (dec_var)


State 171

   86 proc: VOID ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 212
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 172

   85 proc: VOID ID OPEN_PAREN params CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 213


State 173

   78 assign_def: ID • ASSIGN expr SEMI
   79 assign_mat: ID • dims ASSIGN expr SEMI
   80           | ID • dims ASSIGN ID dims SEMI
  142 function_call: ID • OPEN_PAREN args CLOSE_PAREN SEMI
  143              | ID • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 81
    OPEN_BRACK  shift, and go to state 21
    ASSIGN      shift, and go to state 22

    dims  go to state 23


State 174

  139 while_stmt: WHILE • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 214


State 175

  141 dowhile_stmt: DO • BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI

    BLOCK_BEGIN  shift, and go to state 215


State 176

  133 switch_stmt: SWITCH • COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

    COLON  shift, and go to state 216


State 177

  110 if_stmt: IF • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  111        | IF • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  112        | IF • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  113        | IF • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt

    OPEN_PAREN  shift, and go to state 217


State 178

  140 for_stmt: FOR • OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 218


State 179

  102 scan_stmt: SCAN • OPEN_PAREN ID CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 219


State 180

  103 print_stmt: PRINT • OPEN_PAREN print_content CLOSE_PAREN SEMI
  104           | PRINT • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 220


State 181

   95 stmt: dec_var •

    $default  reduce using rule 95 (stmt)


State 182

   96 stmt: assigns •

    $default  reduce using rule 96 (stmt)


State 183

  148 principal: MAIN OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 221


State 184

   93 stmts: stmt •
   94      | stmt • stmts

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    $default  reduce using rule 93 (stmts)

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 222
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 185

  100 stmt: scan_stmt •

    $default  reduce using rule 100 (stmt)


State 186

  101 stmt: print_stmt •

    $default  reduce using rule 101 (stmt)


State 187

   98 stmt: conditional_stmt •

    $default  reduce using rule 98 (stmt)


State 188

  108 conditional_stmt: if_stmt •

    $default  reduce using rule 108 (conditional_stmt)


State 189

  109 conditional_stmt: switch_stmt •

    $default  reduce using rule 109 (conditional_stmt)


State 190

   99 stmt: iteration_stmt •

    $default  reduce using rule 99 (stmt)


State 191

  136 iteration_stmt: while_stmt •

    $default  reduce using rule 136 (iteration_stmt)


State 192

  137 iteration_stmt: for_stmt •

    $default  reduce using rule 137 (iteration_stmt)


State 193

  138 iteration_stmt: dowhile_stmt •

    $default  reduce using rule 138 (iteration_stmt)


State 194

   97 stmt: function_call •

    $default  reduce using rule 97 (stmt)


State 195

   91 param: type dims ID •

    $default  reduce using rule 91 (param)


State 196

  147 principal: MAIN OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 223
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 197

   90 params: param COMMA params •

    $default  reduce using rule 90 (params)


State 198

   88 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN • stmts RETURN factor SEMI BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 224
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 199

   87 function: type ID OPEN_PAREN params CLOSE_PAREN • BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END

    BLOCK_BEGIN  shift, and go to state 225


State 200

   13 dec_var: type_modifiers type ID ASSIGN p_values SEMI •

    $default  reduce using rule 13 (dec_var)


State 201

   14 dec_var: type_modifiers type ID dims ASSIGN BLOCK_BEGIN • p_values BLOCK_END SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 226
    expr           go to state 117
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 202

   19 dec_var: type_modifiers type MULT ID ASSIGN p_values • SEMI

    SEMI  shift, and go to state 227


State 203

   21 dec_var: type_modifiers type MULT ID dims SEMI •

    $default  reduce using rule 21 (dec_var)


State 204

   20 dec_var: type_modifiers type MULT ID dims ASSIGN • BLOCK_BEGIN p_values BLOCK_END SEMI

    BLOCK_BEGIN  shift, and go to state 228


State 205

   24 dec_var: type_modifier STRUCT ID BLOCK_BEGIN BLOCK_END SEMI •

    $default  reduce using rule 24 (dec_var)


State 206

   22 dec_var: type_modifier STRUCT ID BLOCK_BEGIN decs_var BLOCK_END • SEMI

    SEMI  shift, and go to state 229


State 207

   55 p_values: expr COMMA p_values •

    $default  reduce using rule 55 (p_values)


State 208

   10 dec_var: type ID dims ASSIGN BLOCK_BEGIN p_values • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 230


State 209

   16 dec_var: type MULT ID ASSIGN p_values SEMI •

    $default  reduce using rule 16 (dec_var)


State 210

   17 dec_var: type MULT ID dims ASSIGN BLOCK_BEGIN • p_values BLOCK_END SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 231
    expr           go to state 117
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 211

  142 function_call: ID OPEN_PAREN args CLOSE_PAREN SEMI •

    $default  reduce using rule 142 (function_call)


State 212

   86 proc: VOID ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 232


State 213

   85 proc: VOID ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 233
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 214

  139 while_stmt: WHILE OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    ID            shift, and go to state 234
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 235
    FALSE         shift, and go to state 236
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 237
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    logic_expr     go to state 238
    c_term         go to state 239
    comp           go to state 240
    function_call  go to state 57


State 215

  141 dowhile_stmt: DO BLOCK_BEGIN • stmts BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 241
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 216

  133 switch_stmt: SWITCH COLON • OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 242


State 217

  110 if_stmt: IF OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  111        | IF OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  112        | IF OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  113        | IF OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt

    ID            shift, and go to state 234
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 235
    FALSE         shift, and go to state 236
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 237
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    logic_expr     go to state 243
    c_term         go to state 239
    comp           go to state 240
    function_call  go to state 57


State 218

  140 for_stmt: FOR OPEN_PAREN • dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11

    dec_var         go to state 244
    type_modifiers  go to state 15
    type_modifier   go to state 16
    type            go to state 17


State 219

  102 scan_stmt: SCAN OPEN_PAREN • ID CLOSE_PAREN SEMI

    ID  shift, and go to state 245


State 220

  103 print_stmt: PRINT OPEN_PAREN • print_content CLOSE_PAREN SEMI
  104           | PRINT OPEN_PAREN • CLOSE_PAREN SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 246
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    CLOSE_PAREN   shift, and go to state 247
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 248
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    print_content  go to state 249
    function_call  go to state 57


State 221

  148 principal: MAIN OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 148 (principal)


State 222

   94 stmts: stmt stmts •

    $default  reduce using rule 94 (stmts)


State 223

  147 principal: MAIN OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 250


State 224

   88 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts • RETURN factor SEMI BLOCK_END

    RETURN  shift, and go to state 251


State 225

   87 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN • stmts RETURN factor SEMI BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 252
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 226

   14 dec_var: type_modifiers type ID dims ASSIGN BLOCK_BEGIN p_values • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 253


State 227

   19 dec_var: type_modifiers type MULT ID ASSIGN p_values SEMI •

    $default  reduce using rule 19 (dec_var)


State 228

   20 dec_var: type_modifiers type MULT ID dims ASSIGN BLOCK_BEGIN • p_values BLOCK_END SEMI

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    p_values       go to state 254
    expr           go to state 117
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 229

   22 dec_var: type_modifier STRUCT ID BLOCK_BEGIN decs_var BLOCK_END SEMI •

    $default  reduce using rule 22 (dec_var)


State 230

   10 dec_var: type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END • SEMI

    SEMI  shift, and go to state 255


State 231

   17 dec_var: type MULT ID dims ASSIGN BLOCK_BEGIN p_values • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 256


State 232

   86 proc: VOID ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 86 (proc)


State 233

   85 proc: VOID ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 257


State 234

   41 atomo: ID •
   42      | ID • dims
   45      | ID • DOT ID
   67 factor: ID • INCREMENT
   68       | ID • DECREMENT
  118 c_term: ID •
  119       | ID • dims
  142 function_call: ID • OPEN_PAREN args CLOSE_PAREN SEMI
  143              | ID • OPEN_PAREN CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 81
    OPEN_BRACK  shift, and go to state 21
    DOT         shift, and go to state 73
    INCREMENT   shift, and go to state 83
    DECREMENT   shift, and go to state 84

    CLOSE_PAREN  reduce using rule 118 (c_term)
    SEMI         reduce using rule 118 (c_term)
    AND          reduce using rule 118 (c_term)
    OR           reduce using rule 118 (c_term)
    NOT          reduce using rule 118 (c_term)
    $default     reduce using rule 41 (atomo)

    dims  go to state 258


State 235

  120 c_term: TRUE •

    $default  reduce using rule 120 (c_term)


State 236

  121 c_term: FALSE •

    $default  reduce using rule 121 (c_term)


State 237

   56 expr: expr • PLUS term
   57     | expr • MINUS term
   58     | expr • ADD_ASSIGN term
   59     | expr • SUB_ASSIGN term
  123 comp: expr • comp_op expr

    PLUS        shift, and go to state 90
    MINUS       shift, and go to state 91
    ADD_ASSIGN  shift, and go to state 92
    SUB_ASSIGN  shift, and go to state 93
    EQ          shift, and go to state 259
    NEQ         shift, and go to state 260
    LT          shift, and go to state 261
    GT          shift, and go to state 262
    LE          shift, and go to state 263
    GE          shift, and go to state 264

    comp_op  go to state 265


State 238

  116 logic_expr: logic_expr • logic_op c_term
  139 while_stmt: WHILE OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    CLOSE_PAREN  shift, and go to state 266
    AND          shift, and go to state 267
    OR           shift, and go to state 268
    NOT          shift, and go to state 269

    logic_op  go to state 270


State 239

  117 logic_expr: c_term •

    $default  reduce using rule 117 (logic_expr)


State 240

  122 c_term: comp •

    $default  reduce using rule 122 (c_term)


State 241

  141 dowhile_stmt: DO BLOCK_BEGIN stmts • BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI

    BLOCK_END  shift, and go to state 271


State 242

  133 switch_stmt: SWITCH COLON OPEN_PAREN • ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

    ID  shift, and go to state 272


State 243

  110 if_stmt: IF OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  111        | IF OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  112        | IF OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  113        | IF OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt
  116 logic_expr: logic_expr • logic_op c_term

    CLOSE_PAREN  shift, and go to state 273
    AND          shift, and go to state 267
    OR           shift, and go to state 268
    NOT          shift, and go to state 269

    logic_op  go to state 270


State 244

  140 for_stmt: FOR OPEN_PAREN dec_var • logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    ID            shift, and go to state 234
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 235
    FALSE         shift, and go to state 236
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 237
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    logic_expr     go to state 274
    c_term         go to state 239
    comp           go to state 240
    function_call  go to state 57


State 245

  102 scan_stmt: SCAN OPEN_PAREN ID • CLOSE_PAREN SEMI

    CLOSE_PAREN  shift, and go to state 275


State 246

   73 value: STRING_VALUE •
  107 print_content: STRING_VALUE • PLUS print_content

    PLUS  shift, and go to state 276

    PLUS      [reduce using rule 73 (value)]
    $default  reduce using rule 73 (value)


State 247

  104 print_stmt: PRINT OPEN_PAREN CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 277


State 248

   56 expr: expr • PLUS term
   57     | expr • MINUS term
   58     | expr • ADD_ASSIGN term
   59     | expr • SUB_ASSIGN term
  105 print_content: expr •

    PLUS        shift, and go to state 90
    MINUS       shift, and go to state 91
    ADD_ASSIGN  shift, and go to state 92
    SUB_ASSIGN  shift, and go to state 93

    PLUS      [reduce using rule 105 (print_content)]
    $default  reduce using rule 105 (print_content)


State 249

  103 print_stmt: PRINT OPEN_PAREN print_content • CLOSE_PAREN SEMI
  106 print_content: print_content • PLUS expr

    CLOSE_PAREN  shift, and go to state 278
    PLUS         shift, and go to state 279


State 250

  147 principal: MAIN OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 147 (principal)


State 251

   88 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN • factor SEMI BLOCK_END

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    factor         go to state 280
    value          go to state 60
    function_call  go to state 57


State 252

   87 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts • RETURN factor SEMI BLOCK_END

    RETURN  shift, and go to state 281


State 253

   14 dec_var: type_modifiers type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END • SEMI

    SEMI  shift, and go to state 282


State 254

   20 dec_var: type_modifiers type MULT ID dims ASSIGN BLOCK_BEGIN p_values • BLOCK_END SEMI

    BLOCK_END  shift, and go to state 283


State 255

   10 dec_var: type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI •

    $default  reduce using rule 10 (dec_var)


State 256

   17 dec_var: type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END • SEMI

    SEMI  shift, and go to state 284


State 257

   85 proc: VOID ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 85 (proc)


State 258

   42 atomo: ID dims •
  119 c_term: ID dims •

    CLOSE_PAREN  reduce using rule 119 (c_term)
    SEMI         reduce using rule 119 (c_term)
    AND          reduce using rule 119 (c_term)
    OR           reduce using rule 119 (c_term)
    NOT          reduce using rule 119 (c_term)
    $default     reduce using rule 42 (atomo)


State 259

  124 comp_op: EQ •

    $default  reduce using rule 124 (comp_op)


State 260

  125 comp_op: NEQ •

    $default  reduce using rule 125 (comp_op)


State 261

  129 comp_op: LT •

    $default  reduce using rule 129 (comp_op)


State 262

  128 comp_op: GT •

    $default  reduce using rule 128 (comp_op)


State 263

  127 comp_op: LE •

    $default  reduce using rule 127 (comp_op)


State 264

  126 comp_op: GE •

    $default  reduce using rule 126 (comp_op)


State 265

  123 comp: expr comp_op • expr

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 285
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 266

  139 while_stmt: WHILE OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 286


State 267

  130 logic_op: AND •

    $default  reduce using rule 130 (logic_op)


State 268

  131 logic_op: OR •

    $default  reduce using rule 131 (logic_op)


State 269

  132 logic_op: NOT •

    $default  reduce using rule 132 (logic_op)


State 270

  116 logic_expr: logic_expr logic_op • c_term

    ID            shift, and go to state 234
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 235
    FALSE         shift, and go to state 236
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 237
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    c_term         go to state 287
    comp           go to state 240
    function_call  go to state 57


State 271

  141 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END • WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI

    WHILE  shift, and go to state 288


State 272

  133 switch_stmt: SWITCH COLON OPEN_PAREN ID • CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

    CLOSE_PAREN  shift, and go to state 289


State 273

  110 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END
  111        | IF OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  112        | IF OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  113        | IF OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END else_if_stmt

    BLOCK_BEGIN  shift, and go to state 290


State 274

  116 logic_expr: logic_expr • logic_op c_term
  140 for_stmt: FOR OPEN_PAREN dec_var logic_expr • SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    SEMI  shift, and go to state 291
    AND   shift, and go to state 267
    OR    shift, and go to state 268
    NOT   shift, and go to state 269

    logic_op  go to state 270


State 275

  102 scan_stmt: SCAN OPEN_PAREN ID CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 292


State 276

  107 print_content: STRING_VALUE PLUS • print_content

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 246
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 248
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    print_content  go to state 293
    function_call  go to state 57


State 277

  104 print_stmt: PRINT OPEN_PAREN CLOSE_PAREN SEMI •

    $default  reduce using rule 104 (print_stmt)


State 278

  103 print_stmt: PRINT OPEN_PAREN print_content CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 294


State 279

  106 print_content: print_content PLUS • expr

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 295
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 280

   88 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor • SEMI BLOCK_END

    SEMI  shift, and go to state 296


State 281

   87 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN • factor SEMI BLOCK_END

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    factor         go to state 297
    value          go to state 60
    function_call  go to state 57


State 282

   14 dec_var: type_modifiers type ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI •

    $default  reduce using rule 14 (dec_var)


State 283

   20 dec_var: type_modifiers type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END • SEMI

    SEMI  shift, and go to state 298


State 284

   17 dec_var: type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI •

    $default  reduce using rule 17 (dec_var)


State 285

   56 expr: expr • PLUS term
   57     | expr • MINUS term
   58     | expr • ADD_ASSIGN term
   59     | expr • SUB_ASSIGN term
  123 comp: expr comp_op expr •

    PLUS        shift, and go to state 90
    MINUS       shift, and go to state 91
    ADD_ASSIGN  shift, and go to state 92
    SUB_ASSIGN  shift, and go to state 93

    $default  reduce using rule 123 (comp)


State 286

  139 while_stmt: WHILE OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 299
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 287

  116 logic_expr: logic_expr logic_op c_term •

    $default  reduce using rule 116 (logic_expr)


State 288

  141 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE • OPEN_PAREN logic_expr CLOSE_PAREN SEMI

    OPEN_PAREN  shift, and go to state 300


State 289

  133 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN • BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 301


State 290

  110 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END
  111        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  112        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  113        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END else_if_stmt

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 302
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 291

  140 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI • expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    ID            shift, and go to state 58
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 303
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    function_call  go to state 57


State 292

  102 scan_stmt: SCAN OPEN_PAREN ID CLOSE_PAREN SEMI •

    $default  reduce using rule 102 (scan_stmt)


State 293

  106 print_content: print_content • PLUS expr
  107              | STRING_VALUE PLUS print_content •

    PLUS  shift, and go to state 279

    PLUS      [reduce using rule 107 (print_content)]
    $default  reduce using rule 107 (print_content)


State 294

  103 print_stmt: PRINT OPEN_PAREN print_content CLOSE_PAREN SEMI •

    $default  reduce using rule 103 (print_stmt)


State 295

   56 expr: expr • PLUS term
   57     | expr • MINUS term
   58     | expr • ADD_ASSIGN term
   59     | expr • SUB_ASSIGN term
  106 print_content: print_content PLUS expr •

    PLUS        shift, and go to state 90
    MINUS       shift, and go to state 91
    ADD_ASSIGN  shift, and go to state 92
    SUB_ASSIGN  shift, and go to state 93

    PLUS      [reduce using rule 106 (print_content)]
    $default  reduce using rule 106 (print_content)


State 296

   88 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI • BLOCK_END

    BLOCK_END  shift, and go to state 304


State 297

   87 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor • SEMI BLOCK_END

    SEMI  shift, and go to state 305


State 298

   20 dec_var: type_modifiers type MULT ID dims ASSIGN BLOCK_BEGIN p_values BLOCK_END SEMI •

    $default  reduce using rule 20 (dec_var)


State 299

  139 while_stmt: WHILE OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 306


State 300

  141 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN • logic_expr CLOSE_PAREN SEMI

    ID            shift, and go to state 234
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 235
    FALSE         shift, and go to state 236
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 237
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    logic_expr     go to state 307
    c_term         go to state 239
    comp           go to state 240
    function_call  go to state 57


State 301

  133 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN • switch_cases DEFAULT COLON stmts BLOCK_END

    CASE  shift, and go to state 308

    $default  reduce using rule 134 (switch_cases)

    switch_cases  go to state 309


State 302

  110 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END
  111        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END
  112        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  113        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END else_if_stmt

    BLOCK_END  shift, and go to state 310


State 303

   56 expr: expr • PLUS term
   57     | expr • MINUS term
   58     | expr • ADD_ASSIGN term
   59     | expr • SUB_ASSIGN term
  140 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    CLOSE_PAREN  shift, and go to state 311
    PLUS         shift, and go to state 90
    MINUS        shift, and go to state 91
    ADD_ASSIGN   shift, and go to state 92
    SUB_ASSIGN   shift, and go to state 93


State 304

   88 function: type ID OPEN_PAREN CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END •

    $default  reduce using rule 88 (function)


State 305

   87 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI • BLOCK_END

    BLOCK_END  shift, and go to state 312


State 306

  139 while_stmt: WHILE OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 139 (while_stmt)


State 307

  116 logic_expr: logic_expr • logic_op c_term
  141 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN logic_expr • CLOSE_PAREN SEMI

    CLOSE_PAREN  shift, and go to state 313
    AND          shift, and go to state 267
    OR           shift, and go to state 268
    NOT          shift, and go to state 269

    logic_op  go to state 270


State 308

  135 switch_cases: CASE • value COLON stmts BREAK switch_cases

    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48

    value  go to state 314


State 309

  133 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases • DEFAULT COLON stmts BLOCK_END

    DEFAULT  shift, and go to state 315


State 310

  110 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •
  111        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END • ELSE BLOCK_BEGIN stmts BLOCK_END
  112        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END • else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END
  113        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END • else_if_stmt

    ELSE     shift, and go to state 316
    ELSE_IF  shift, and go to state 317

    $default  reduce using rule 110 (if_stmt)

    else_if_stmt  go to state 318


State 311

  140 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 319


State 312

   87 function: type ID OPEN_PAREN params CLOSE_PAREN BLOCK_BEGIN stmts RETURN factor SEMI BLOCK_END •

    $default  reduce using rule 87 (function)


State 313

  141 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN • SEMI

    SEMI  shift, and go to state 320


State 314

  135 switch_cases: CASE value • COLON stmts BREAK switch_cases

    COLON  shift, and go to state 321


State 315

  133 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT • COLON stmts BLOCK_END

    COLON  shift, and go to state 322


State 316

  111 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 323


State 317

  114 else_if_stmt: ELSE_IF • OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    OPEN_PAREN  shift, and go to state 324


State 318

  112 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt • ELSE BLOCK_BEGIN stmts BLOCK_END
  113        | IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt •
  115 else_if_stmt: else_if_stmt • else_if_stmt

    ELSE     shift, and go to state 325
    ELSE_IF  shift, and go to state 317

    $default  reduce using rule 113 (if_stmt)

    else_if_stmt  go to state 326


State 319

  140 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 327
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 320

  141 dowhile_stmt: DO BLOCK_BEGIN stmts BLOCK_END WHILE OPEN_PAREN logic_expr CLOSE_PAREN SEMI •

    $default  reduce using rule 141 (dowhile_stmt)


State 321

  135 switch_cases: CASE value COLON • stmts BREAK switch_cases

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 328
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 322

  133 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON • stmts BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 329
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 323

  111 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 330
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 324

  114 else_if_stmt: ELSE_IF OPEN_PAREN • logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END

    ID            shift, and go to state 234
    INT_NUMBER    shift, and go to state 45
    FLOAT_NUMBER  shift, and go to state 46
    STRING_VALUE  shift, and go to state 47
    NULL_VALUE    shift, and go to state 48
    TRUE          shift, and go to state 235
    FALSE         shift, and go to state 236
    OPEN_PAREN    shift, and go to state 49
    AMPERSAND     shift, and go to state 39
    MULT          shift, and go to state 51

    atomo          go to state 52
    expr           go to state 237
    term           go to state 54
    factor         go to state 55
    value          go to state 60
    logic_expr     go to state 331
    c_term         go to state 239
    comp           go to state 240
    function_call  go to state 57


State 325

  112 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 332


State 326

  115 else_if_stmt: else_if_stmt • else_if_stmt
  115             | else_if_stmt else_if_stmt •

    ELSE_IF  shift, and go to state 317

    ELSE_IF   [reduce using rule 115 (else_if_stmt)]
    $default  reduce using rule 115 (else_if_stmt)

    else_if_stmt  go to state 326


State 327

  140 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 333


State 328

  135 switch_cases: CASE value COLON stmts • BREAK switch_cases

    BREAK  shift, and go to state 334


State 329

  133 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts • BLOCK_END

    BLOCK_END  shift, and go to state 335


State 330

  111 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 336


State 331

  114 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr • CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END
  116 logic_expr: logic_expr • logic_op c_term

    CLOSE_PAREN  shift, and go to state 337
    AND          shift, and go to state 267
    OR           shift, and go to state 268
    NOT          shift, and go to state 269

    logic_op  go to state 270


State 332

  112 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 338
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 333

  140 for_stmt: FOR OPEN_PAREN dec_var logic_expr SEMI expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 140 (for_stmt)


State 334

  135 switch_cases: CASE value COLON stmts BREAK • switch_cases

    CASE  shift, and go to state 308

    $default  reduce using rule 134 (switch_cases)

    switch_cases  go to state 339


State 335

  133 switch_stmt: SWITCH COLON OPEN_PAREN ID CLOSE_PAREN BLOCK_BEGIN switch_cases DEFAULT COLON stmts BLOCK_END •

    $default  reduce using rule 133 (switch_stmt)


State 336

  111 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END ELSE BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 111 (if_stmt)


State 337

  114 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr CLOSE_PAREN • BLOCK_BEGIN stmts BLOCK_END

    BLOCK_BEGIN  shift, and go to state 340


State 338

  112 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 341


State 339

  135 switch_cases: CASE value COLON stmts BREAK switch_cases •

    $default  reduce using rule 135 (switch_cases)


State 340

  114 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN • stmts BLOCK_END

    ID       shift, and go to state 173
    INT      shift, and go to state 2
    DOUBLE   shift, and go to state 3
    FLOAT    shift, and go to state 4
    CHAR     shift, and go to state 5
    STRING   shift, and go to state 6
    BOOLEAN  shift, and go to state 7
    STRUCT   shift, and go to state 8
    ENUM     shift, and go to state 9
    WHILE    shift, and go to state 174
    DO       shift, and go to state 175
    SWITCH   shift, and go to state 176
    IF       shift, and go to state 177
    FOR      shift, and go to state 178
    CONST    shift, and go to state 10
    STATIC   shift, and go to state 11
    SCAN     shift, and go to state 179
    PRINT    shift, and go to state 180

    dec_var           go to state 181
    type_modifiers    go to state 15
    type_modifier     go to state 16
    type              go to state 17
    assigns           go to state 182
    assign_def        go to state 19
    assign_mat        go to state 20
    stmts             go to state 342
    stmt              go to state 184
    scan_stmt         go to state 185
    print_stmt        go to state 186
    conditional_stmt  go to state 187
    if_stmt           go to state 188
    switch_stmt       go to state 189
    iteration_stmt    go to state 190
    while_stmt        go to state 191
    for_stmt          go to state 192
    dowhile_stmt      go to state 193
    function_call     go to state 194


State 341

  112 if_stmt: IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END else_if_stmt ELSE BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 112 (if_stmt)


State 342

  114 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts • BLOCK_END

    BLOCK_END  shift, and go to state 343


State 343

  114 else_if_stmt: ELSE_IF OPEN_PAREN logic_expr CLOSE_PAREN BLOCK_BEGIN stmts BLOCK_END •

    $default  reduce using rule 114 (else_if_stmt)
